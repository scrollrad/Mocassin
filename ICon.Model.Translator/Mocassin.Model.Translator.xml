<?xml version="1.0"?>

<doc>
  <assembly>
    <name>Mocassin.Model.Translator</name>
  </assembly>
  <members>
    <member name="T:Mocassin.Model.Translator.DbJournalMode">
      <summary>
        Enumerates the possible SQLite db journal modes
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Delete">
      <summary>
        Delete mode
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Truncate">
      <summary>
        Truncate Mode
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Persist">
      <summary>
        Persist mode
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Memory">
      <summary>
        Memory mode
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Wal">
      <summary>
        Wal mode
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.DbJournalMode.Off">
      <summary>
        No journal
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ISimulationLibrary">
      <summary>
        Provides an interface for accessing simulation libraries based on SQLite3
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.SimulationPackages">
      <summary>
        Database set for translated simulation packages
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.StructureModels">
      <summary>
        Database set for translated structure models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.TransitionModels">
      <summary>
        Database set for translated transition models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.EnergyModels">
      <summary>
        Database set for translated energy models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.JobModels">
      <summary>
        Database set for translated job models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.LatticeModels">
      <summary>
        Database set for translated lattice models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.EnvironmentDefinitions">
      <summary>
        Database set for all environment definitions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.PairEnergyTables">
      <summary>
        Database set for all pair energy tables
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.ClusterEnergyTables">
      <summary>
        Database set for all cluster energy tables
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.JumpCollections">
      <summary>
        Database set for all jump collections
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.JumpDirections">
      <summary>
        Database set for all jump directions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.JobMetaData">
      <summary>
        Database set for all job meta information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ISimulationLibrary.JobResultData">
      <summary>
        Database set for all job result information
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ISimulationLibrary.SaveChanges">
      <summary>
        Save the changes to the interop db context
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ISimulationLibrary.SetJournalMode(Mocassin.Model.Translator.DbJournalMode)">
      <summary>
        Sets the <see cref="T:Mocassin.Model.Translator.DbJournalMode" />
      </summary>
      <param name="journalMode"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationDbContext">
      <inheritdoc cref="T:Mocassin.Model.Translator.ISimulationLibrary" />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.SimulationPackages">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.StructureModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.TransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.EnergyModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.JobModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.LatticeModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.EnvironmentDefinitions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.PairEnergyTables">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.ClusterEnergyTables">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.JumpCollections">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.JumpDirections">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.JobMetaData">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationDbContext.JobResultData">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.SimulationDbContext.#ctor(System.String)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.SimulationDbContext.SaveChanges">
      <inheritdoc cref="M:Mocassin.Model.Translator.ISimulationLibrary.SaveChanges" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.SimulationDbContext.SetJournalMode(Mocassin.Model.Translator.DbJournalMode)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.SimulationDbContext.PerformActionOnInteropEntities(System.Action{Mocassin.Model.Translator.InteropEntityBase})">
      <summary>
        Performs the passed action on all properties of database set entries that are interop entities
      </summary>
      <param name="action"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.SimulationDbContext.GetDbSetPropertyInfos">
      <summary>
        Gets all database sets property info of the context by reflection
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropPropertyAttribute">
      <summary>
        Attribute to mark a property as an interop object that supports binary conversion from or to a binary
        sister property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropPropertyAttribute.BinaryPropertyName">
      <summary>
        The name of the property used for binary storage
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropPropertyAttribute.#ctor(System.String)">
      <summary>
        Create new interop property attribute with the passed binary sister property name
      </summary>
      <param name="binaryPropertyName"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.MocsimExtensionComponentAttribute">
      <summary>
        Attribute to uniquely mark classes as components for specific Mocassin simulation extensions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MocsimExtensionComponentAttribute.ExtensionGuid">
      <summary>
        Get the <see cref="T:System.Guid" /> that identifies the simulator extension
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MocsimExtensionComponentAttribute.ExtensionAlias">
      <summary>
        Get the extension alias <see cref="T:System.String" />
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.MocsimExtensionComponentAttribute.#ctor(System.String,System.String)">
      <summary>
        Creates new <see cref="T:Mocassin.Model.Translator.MocsimExtensionComponentAttribute" /> from a guid and alias
        <see cref="T:System.String" />
      </summary>
      <param name="guidStr"></param>
      <param name="extensionAlias"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.OwnedBlobPropertyAttribute">
      <summary>
        Attribute that marks a property as an owned blob property within a database and defines the sister property for
        conversion from or to binary data
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.OwnedBlobPropertyAttribute.BlobPropertyName">
      <summary>
        The property name the blob binary representation is bound to
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.OwnedBlobPropertyAttribute.#ctor(System.String)">
      <summary>
        Crate new owned blob property attribute with the passed binary property name
      </summary>
      <param name="blobPropertyName"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.EnergyModelComponentBase">
      <summary>
        Base class for all simulation energy model components stored in the interop database
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnergyModelComponentBase.EnergyModelId">
      <summary>
        The energy model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnergyModelComponentBase.SimulationEnergyModel">
      <summary>
        The energy model navigation property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.StructureModelComponentBase">
      <summary>
        Base class for all simulation structure model components stored in the interop database
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.StructureModelComponentBase.StructureModelId">
      <summary>
        The structure model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.StructureModelComponentBase.SimulationStructureModel">
      <summary>
        The structure model navigation property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.TransitionModelComponentBase">
      <summary>
        Base class for all simulation transition model components stored in the interop database
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.TransitionModelComponentBase.TransitionModelId">
      <summary>
        The transition model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.TransitionModelComponentBase.SimulationTransitionModel">
      <summary>
        The transition model navigation property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.BlobEntityBase">
      <summary>
        Abstract base class for objects that use marshalling to a binary state for storage in the database
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.BlobEntityBase.BlobByteCount">
      <summary>
        The total number of bytes for the blob containing the data and header bytes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.BlobEntityBase.HeaderByteCount">
      <summary>
        The number of bytes of the blobs that are header information and not actual data
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.BlobEntityBase.BinaryState">
      <summary>
        The binary data of the entity. Property is for EF data storage only
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.BlobEntityBase.ChangeStateToBinary(Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Parses the blob entity object into the binary data and header properties
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.BlobEntityBase.ChangeStateToObject(Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Parses the binary data and header properties and populates the object
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBase">
      <summary>
        Abstract base class for all database entities that have at least a primary context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBase.Id">
      <summary>
        The database entity context key
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropEntityBase">
      <summary>
        Represents an interop entity that has properties that are represents as local blobs in the database but is not
        itself a blob stored entity
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropEntityBase.StateChangeAction">
      <summary>
        Delegate fro the state change action of interop entities
      </summary>
      <param name="entity"></param>
      <param name="service"></param>
      <param name="isToBinary"></param>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropEntityBase.StateChangeActions">
      <summary>
        Abstract access to the implementing class state change action list
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropEntityBase.ChangePropertyStatesToBinaries(Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Parses the blob entity object into the binary data and header properties
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropEntityBase.ChangePropertyStatesToObjects(Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Parses the binary data and header properties and populates the object
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropEntityBase.GetStateChangeDelegates">
      <summary>
        Gets the state change delegates for the object. Builds the delegates on first call
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropEntityBase.BuildStateChangeDelegates">
      <summary>
        Builds all state change delegates for the implementing object type
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropEntityBase.BuildInteropPropertyHandler(System.Reflection.PropertyInfo,Mocassin.Model.Translator.InteropPropertyAttribute)">
      <summary>
        Build handler delegate for an interop property that handles conversion from or to the binary state
      </summary>
      <param name="sourceProperty"></param>
      <param name="attribute"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropEntityBase.BuildOwnedBlobPropertyHandler(System.Reflection.PropertyInfo,Mocassin.Model.Translator.OwnedBlobPropertyAttribute)">
      <summary>
        Build handler delegate for an owned blob property that handles conversion from or to the binary state
      </summary>
      <param name="sourceProperty"></param>
      <param name="attribute"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropArray`1">
      <summary>
        Provides a wrapper system for <see cref="T:System.Array" /> objects to convert from and into the binary layout used by the C
        simulator
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropArray`1.PaddingMarkerBytes">
      <summary>
        Get the byte array used to mark the four potentially required padding bytes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropArray`1.InternalArray">
      <summary>
        Get the wrapped <see cref="T:System.Array" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropArray`1.BlockLengths">
      <summary>
        Blocks lengths to access the linear array by dimensions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropArray`1.Rank">
      <summary>
        The rank of the matrix entity
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropArray`1.Length">
      <summary>
        The total length of the matrix entries in all dimensions
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.#ctor(System.Array)">
      <summary>
        Creates new interop binary array from an array object
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.#ctor">
      <summary>
        Creates an empty <see cref="T:Mocassin.Model.Translator.InteropArray`1" />
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.GetValue(System.Int32[])">
      <summary>
        Get the value at the given indices. Throws if the number of indices does not match dimension (Slow, not intended
        for frequent usage)
      </summary>
      <param name="indices"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.SetValue(`0,System.Int32[])">
      <summary>
        Set the value at the given indices. Throws if the number of indices does not match dimension (Slow, not intended
        for frequent usage)
      </summary>
      <param name="value"></param>
      <param name="indices"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.GetHeaderByteCount(System.Int32)">
      <summary>
        Get the header byte count with proper padding for 8 byte alignment
      </summary>
      <param name="rank"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.IsPaddingRequired(System.Int32)">
      <summary>
        Get a boolean flag if padding bytes are required to get 8 byte alignment for the provided rank
      </summary>
      <param name="rank"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.GetItemBlocksCount(System.Int32)">
      <summary>
        Get the number of index skip entries by the array rank
      </summary>
      <param name="rank"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropArray`1.ChangeStateToObject(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.BlocksToDimensions(System.Int32[],System.Int32)">
      <summary>
        Converts the blocks sizes and total item count into the dimensions of the rectangular array
      </summary>
      <param name="blocks"></param>
      <param name="dataLength"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropArray`1.ChangeStateToBinary(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.ReadRankFromBinaryState">
      <summary>
        Reads the rank of the array from the binary state
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.IndexOf(System.Int32[])">
      <summary>
        Get the 1-dimensional index of the m-dimensional index access to the matrix
      </summary>
      <param name="indices"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.IndicesOf(System.Int32)">
      <summary>
        Get the n-dimensional indices that matches the provided linear index in the matrix
      </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.GetDimensions">
      <summary>
        Get the dimensions of the interop array
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropArray`1.Initialize(System.Array)">
      <summary>
        Initializes the interop binary array from an arbitrary array with correct element type
      </summary>
      <param name="array"></param>
      <exception cref="T:System.ArgumentException">
        If the element type of the array cannot be assigned to the type of the interop array
      </exception>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropCsvMatrix`1">
      <summary>
        Represents a linearized encoded matrix that supports csv style string conversion and parsing
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropCsvMatrix`1.SizeList">
      <summary>
        The size list that describes the dimensions of the matrix
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropCsvMatrix`1.LinearMatrix">
      <summary>
        The linearized version of the matrix
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropCsvMatrix`1.ToString">
      <summary>
        Creates a csv style string representation of the encoded lattice
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropCsvMatrix`1.Parse(System.String,System.Func{System.String,`0})">
      <summary>
        Parses a csv style string representation of an encoded lattice into the actual lattice object using the provided
        string to value converter
      </summary>
      <param name="value"></param>
      <param name="converter"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropList`1">
      <summary>
        Interop list of structs to exchange linear lists of values between managed and unmanaged code
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropList`1.Values">
      <summary>
        Wrapped list of objects used to create the array
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropList`1.BlobByteCount">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.InteropList`1.HeaderByteCount">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropList`1.ChangeStateToBinary(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropList`1.ChangeStateToObject(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.InteropList`1.GetBinarySizeOfValueList">
      <summary>
        Calculates the binary object size for the current value list
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropList`1.GetItemCountOfBinaryState">
      <summary>
        Calculates the number of objects in the current binary state
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.RoutineDataEntity">
      <summary>
        Routine data class that is used to encode a custom routine identification and parameters
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.RoutineDataConstructors">
      <summary>
        Get the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> of known
        <see cref="T:Mocassin.Model.Translator.RoutineDataEntity" /> types
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.DefaultInstructionRegex">
      <summary>
        Get the default <see cref="T:System.Text.RegularExpressions.Regex" /> used to parse routine instructions from a job instruction string
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.DefaultParameterRegex">
      <summary>
        Get the default <see cref="T:System.Text.RegularExpressions.Regex" /> used to parse the routine parameters from a found routine instruction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.RoutineGuid">
      <summary>
        Get the <see cref="T:System.Guid" /> that identifies the routine
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.RoutineAlias">
      <summary>
        Get the <see cref="T:System.String" /> alias that identifies the routine
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.InternalParameterObject">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.InteropObject`1" /> that contains the routine parameter data
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.BlobByteCount">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity.HeaderByteCount">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.#cctor">
      <summary>
        Static constructor that generates the known types lookup dictionary
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.RoutineDataEntity.ChangeStateToBinary(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.RoutineDataEntity.ChangeStateToObject(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.RoutineDataEntity.GetInteropObjectFromBinaryState(Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Method to extract the actual <see cref="T:Mocassin.Model.Translator.InteropObject" /> from the binary state using the provided
        <see cref="T:Mocassin.Model.Translator.IMarshalService" />
      </summary>
      <param name="marshalService"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.TryParseParameters(System.String)">
      <summary>
        Tries to parse a parameter <see cref="T:System.String" /> of the routine, returns false on error. Format is implementation
        dependent
      </summary>
      <param name="str"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.GetTemplate">
      <summary>
        Implementation defined behavior that returns a <see cref="T:System.String" /> template for the routine
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.GetTemplateParameters">
      <summary>
        Implementation defined behavior that returns <see cref="T:System.Collections.Generic.KeyValuePair`2" /> of
        <see cref="T:System.String" /> data that describes parameters and default values
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.CreateEmpty">
      <summary>
        Creates an empty <see cref="T:Mocassin.Model.Translator.RoutineDataEntity" /> with an empty guid and one byte of data (17 total)
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.RoutineDataEntity.TryParse(System.String,Mocassin.Model.Translator.RoutineDataEntity@)">
      <summary>
        Tries to parse a routine instruction from a <see cref="T:System.String" /> into the matching
        <see cref="T:Mocassin.Model.Translator.RoutineDataEntity" />
      </summary>
      <param name="str"></param>
      <param name="entity"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity.CreateRoutineObject(System.String)">
      <summary>
        Creates a new <see cref="T:Mocassin.Model.Translator.RoutineDataEntity" /> that matches the provided identification
        <see cref="T:System.String" />
      </summary>
      <param name="identification"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.RoutineDataEntity`1">
      <summary>
        Generic routine data class that is used to encode a custom routine identification and parameters
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity`1.RoutineGuid">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity`1.RoutineAlias">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.RoutineDataEntity`1.ParameterObject">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.InteropObject`1" /> that stores the routine parameters
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.RoutineDataEntity`1.GetInteropObjectFromBinaryState(Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity`1.GetGuidInternal">
      <summary>
        Internal GUID lookup that uses the <see cref="T:Mocassin.Model.Translator.MocsimExtensionComponentAttribute" />
        marker, returns the empty
        <see cref="T:System.Guid" /> if the marker is missing
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity`1.GetAliasInternal">
      <summary>
        Internal alias lookup that uses the
        <see cref="T:Mocassin.Model.Translator.MocsimExtensionComponentAttribute" /> marker, returns an empty
        <see cref="T:System.String" /> if the marker is missing
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.RoutineDataEntity`1.TryParseParameters(System.String)">
      <summary>
        Tries to parse the passed parameters and uses the parameter names for value setting using reflection
      </summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ClusterEnergyTableEntity">
      <summary>
        Cluster energy table entity that carries the cluster simulation energy information in te interop database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ClusterEnergyTableEntity._stateChangeDelegates">
      <summary>
        Static backing field for the state change actions of energy model components
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.ParticleToTableIds">
      <summary>
        Fixed 64 bytes buffer for the redirection of particle ids to table ids
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.EnergyTable">
      <summary>
        The 2D energy table entity that stores the energy values mapped by table id and cluster code id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.OccupationCodeList">
      <summary>
        The occupation code list that is used to lookup cluster code ids
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.ObjectId">
      <summary>
        The object id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.EnergyTableBinary">
      <summary>
        Energy table blob conversion property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.OccupationCodeListBinary">
      <summary>
        Occupation code list blob conversion property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ClusterEnergyTableEntity.ParticleToTableIdsBinary">
      <summary>
        Particle to table id blob conversion property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.PairEnergyTableEntity">
      <summary>
        Two dimensional pair energy table entity that stores the pair energy model information of a single pair interaction
        for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.PairEnergyTableEntity._stateChangeDelegates">
      <summary>
        Static backing field for the state change actions of energy model components
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.PairEnergyTableEntity.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.PairEnergyTableEntity.ObjectId">
      <summary>
        The object id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.PairEnergyTableEntity.EnergyTableBinary">
      <summary>
        The energy table blob conversion property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.PairEnergyTableEntity.EnergyTable">
      <summary>
        2D energy table that stores energy values for each position id and particle id
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.DefectBackgroundEntity">
      <summary>
        The defect background table entity alias. Stores 2D lookup of unit cell defect energies
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.DefectBackgroundEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.DefectBackgroundEntity.#ctor(System.Double[0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.EnergyTableEntity">
      <summary>
        The energy table entity alias class. Stores 2D energy lookup tables for the simulation database
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.EnergyTableEntity.#ctor(System.Double[0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.EnergyBackgroundEntity">
      <summary>
        Energy background alias class. Stores 5D energy background information for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.EnergyBackgroundEntity.Empty">
      <summary>
        The empty energy background property
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.EnergyBackgroundEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.EnergyBackgroundEntity.#ctor(System.Double[0:,0:,0:,0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.LatticeEntity">
      <summary>
        Lattice entity alias class. Stores the 4D simulation lattice as a linear byte array for the simulation database
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.LatticeEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.LatticeEntity.#ctor(System.Byte[0:,0:,0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationEnergyModel">
      <summary>
        The simulation energy model. Stores all energy information that is required for a monte carlo simulation
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationEnergyModel._stateChangeDelegates">
      <summary>
        Static backing field for the energy state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.PairEnergyTableCount">
      <summary>
        The number of pair energy tables within the energy model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.ClusterEnergyTableCount">
      <summary>
        The number of cluster energy tables within the energy model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.DefectBackgroundBinary">
      <summary>
        Defect background blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.DefectBackground">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.DefectBackgroundEntity" /> that stores the 2D structure defect background
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.PairEnergyTables">
      <summary>
        The list of affiliated pair energy table entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationEnergyModel.ClusterEnergyTables">
      <summary>
        The list of affiliated cluster energy table entities
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationJobModel">
      <summary>
        The simulation job model. Defines and stores the specifications and dependencies for a single simulation job run
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationJobModel._stateChangeDelegates">
      <summary>
        Static backing field for the state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationJobPackageModel">
      <summary>
        The simulation package navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationStructureModel">
      <summary>
        The structure model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationEnergyModel">
      <summary>
        The energy model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationTransitionModel">
      <summary>
        The transition model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationLatticeModel">
      <summary>
        The lattice model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobMetaData">
      <summary>
        The meta data navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobResultData">
      <summary>
        The result data navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.SimulationPackageId">
      <summary>
        The simulation package context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.LatticeModelId">
      <summary>
        The lattice model context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.StructureModelId">
      <summary>
        The structure model context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.EnergyModelId">
      <summary>
        The energy model context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.TransitionModelId">
      <summary>
        The transition model context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobInfoBinary">
      <summary>
        Job info blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobHeaderBinary">
      <summary>
        Job header blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.RoutineDataBinary">
      <summary>
        Routine data blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobInfo">
      <summary>
        The job info object that describes the job specifications
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.JobHeader">
      <summary>
        The job header object that describes the job type and behavior
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobModel.RoutineData">
      <summary>
        The <see cref="T:Mocassin.Model.Translator.RoutineDataEntity" /> that stores additional information for custom routines
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.SimulationJobModel.ToString">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationJobPackageModel">
      <summary>
        Job package database entity. Defines and stores a full set of dependent simulation database sets
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationJobPackageModel._stateChangeDelegates">
      <summary>
        Static backing field for the state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.SimulationStructureModel">
      <summary>
        The structure model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.SimulationTransitionModel">
      <summary>
        The transition model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.SimulationEnergyModel">
      <summary>
        The energy model navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.JobModels">
      <summary>
        The list of affiliated job models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.LatticeModels">
      <summary>
        The list of affiliated lattice models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.StructureModelId">
      <summary>
        The structure model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.TransitionModelId">
      <summary>
        The transition model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.EnergyModelId">
      <summary>
        The energy model context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.ModelSystemVersion">
      <summary>
        The model system version string
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.PackageGuid">
      <summary>
        The simulation package guid
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.ProjectGuid">
      <summary>
        The project guid the package was created with
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.Description">
      <summary>
        The user defined package description
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationJobPackageModel.ProjectXml">
      <summary>
        The full model project XML definition
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationLatticeModel">
      <summary>
        The simulation lattice model. Defines and stores the state of the simulation lattice occupation
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationLatticeModel._stateChangeDelegates">
      <summary>
        Static backing field for the state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.SimulationJobPackageModel">
      <summary>
        The simulation package navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.SimulationPackageId">
      <summary>
        The simulation package context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.LatticeInfoBinary">
      <summary>
        Lattice info blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.LatticeBinary">
      <summary>
        Lattice state blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.EnergyBackgroundBinary">
      <summary>
        Energy background blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.LatticeInfo">
      <summary>
        The lattice information that carries simulation run infos about the lattice
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.Lattice">
      <summary>
        The lattice occupation entity
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationLatticeModel.EnergyBackground">
      <summary>
        The energy background entity
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationStructureModel">
      <summary>
        The simulation structure model. Defines and stores the structural information for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationStructureModel._stateChangeDelegates">
      <summary>
        Static backing filed for the state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.NumOfTrackersPerCell">
      <summary>
        The number of static tracker objects per unit cell
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.NumOfGlobalTrackers">
      <summary>
        The number of global tracking objects
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.NumOfEnvironmentDefinitions">
      <summary>
        The number of environment definition entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.InteractionRangeBinary">
      <summary>
        Interaction range blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.StructureMetaDataBinary">
      <summary>
        The structure meta data blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.EnvironmentDefinitions">
      <summary>
        The list of affiliated environment definition entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.InteractionRange">
      <summary>
        The interaction range object for regular environment objects
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationStructureModel.StructureMetaData">
      <summary>
        The structure meta data object that carries non-essential additional structure info for calculations
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.SimulationTransitionModel">
      <summary>
        The simulation transition model. Defines and stores all transition information for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.SimulationTransitionModel._stateChangeDelegates">
      <summary>
        Static backing field for the state change delegates
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpCollections">
      <summary>
        The list of affiliated jump collection entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpDirections">
      <summary>
        The list of affiliated jump direction entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.NumOfJumpCollections">
      <summary>
        Get or set the number of jump collections of the transition model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.NumOfJumpDirections">
      <summary>
        Get or set the number of jump directions of the transition model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpCountTableBinary">
      <summary>
        Jump count table blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpAssignTableBinary">
      <summary>
        Jump assign table blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.StaticTrackerAssignTableBinary">
      <summary>
        Static tracker assign table blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.GlobalTrackerAssignTableBinary">
      <summary>
        Global tracker assign table blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpCountTable">
      <summary>
        The 2D jump count table that assigns each position id/particle id combination the number of possible jumps
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.JumpAssignTable">
      <summary>
        The 3D jump assign table that assigns each position id/particle id combination its set of affiliated jump direction
        ids
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.StaticTrackerAssignTable">
      <summary>
        The 2D static tracker mapping table that assign each position id/particle id combination a static tracker index
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.SimulationTransitionModel.GlobalTrackerAssignTable">
      <summary>
        The 2D global tracker mapping table that assigns each jump collection id/particle id combination a global tracker
        index
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData">
      <summary>
        Represents a set of meta data for simulation jobs
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.CollectionName">
      <summary>
        Get or set the source job collection name
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.ConfigName">
      <summary>
        Get or set the job configuration name
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.JobIndex">
      <summary>
        Get or set the relative job index due to job multiplication in the configuration
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.ConfigIndex">
      <summary>
        Get or set the config index in the collection
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.CollectionIndex">
      <summary>
        Get or set the job collection index
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.Temperature">
      <summary>
        Get or set the thermodynamic temperature
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.ElectricFieldModulus">
      <summary>
        Get or set the electric field modulus in [V/m]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.BaseFrequency">
      <summary>
        Get or set the base frequency in [Hz]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.Mcsp">
      <summary>
        Get or set the main run target MCSP
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.PreRunMcsp">
      <summary>
        Get or set the pre-run run target MCSP
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.NormalizationFactor">
      <summary>
        Get or set the fixed manual normalization
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.TimeLimit">
      <summary>
        Get or set the time limit in seconds
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.FlagString">
      <summary>
        Get or set the job flags
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.DopingInfo">
      <summary>
        Get or set a doping information <see cref="T:System.String" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.IJobMetaData.LatticeInfo">
      <summary>
        Get or set a lattice information <see cref="T:System.String" />
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity">
      <summary>
        Entity that stores meta data about <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> entities to provide a simulation parameter to
        job mapping in the simulation database
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.JobModel">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> navigation entity
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.JobModelId">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> context id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.CollectionName">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.ConfigName">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.JobIndex">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.ConfigIndex">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.CollectionIndex">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.Temperature">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.ElectricFieldModulus">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.BaseFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.Mcsp">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.PreRunMcsp">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.NormalizationFactor">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.TimeLimit">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.FlagString">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.DopingInfo">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity.LatticeInfo">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity">
      <summary>
        Entity that stores result data about <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> entities to supply data for evaluation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity.JobModel">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity.JobModelId">
      <summary>
        Get or set the affiliated <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity.SimulationStateBinary">
      <summary>
        Get or set the binary representation of the final simulation state
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity.SimulationPreRunStateBinary">
      <summary>
        Get or set the binary representation of the final simulation pre-run state
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobResultDataEntity.SimulationStdout">
      <summary>
        Get or set the <see cref="T:System.String" /> that was written to stdout during simulation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.OccupationCodeListEntity">
      <summary>
        Occupation code list alias class. Represents a linear list of occupation lookup codes for the simulation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Routines.CMmcfeParams">
      <summary>
        Mmc free energy routine parameter data object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Routines.MmcfeRoutineDataEntity">
      <summary>
        The <see cref="T:Mocassin.Model.Translator.RoutineDataEntity`1" /> for providing parameter data and identification for the the MMCFE routine
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.Routines.MmcfeRoutineDataEntity.#ctor">
      <summary>
        Creates new <see cref="T:Mocassin.Model.Translator.Routines.MmcfeRoutineDataEntity" /> with default parameter settings
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.Routines.MmcfeRoutineDataEntity.GetTemplateParameters">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Routines.MmcfeRoutineDataEntity.GetDefaultStructure">
      <summary>
        Get the default <see cref="T:Mocassin.Model.Translator.Routines.CMmcfeParams" /> structure
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EnvironmentDefinitionEntity">
      <summary>
        Simulation environment definition. Defines and stores a single position environment for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.EnvironmentDefinitionEntity._stateChangeDelegates">
      <summary>
        Static backing field for the structure model component state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.ObjectId">
      <summary>
        The object id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.SelectionParticleMask">
      <summary>
        The particle selection mask that describes which particles are part of the selection pool for this environment
        center
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.PositionParticleIdsBinary">
      <summary>
        Position particle ids blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.UpdateParticleIdsBinary">
      <summary>
        Update particle ids blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.PairDefinitionListBinary">
      <summary>
        Pair definition list blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.ClusterDefinitionListBinary">
      <summary>
        Cluster definition list blo conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.PositionParticleIds">
      <summary>
        Fixed 64 byte buffer for possible position particle ids
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.UpdateParticleIds">
      <summary>
        Fixed 64 byte buffer for particle ids that require delta update processes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.PairDefinitionList">
      <summary>
        The list of pair definition entities affiliated with the environment
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EnvironmentDefinitionEntity.ClusterDefinitionList">
      <summary>
        The list of cluster definition entities affiliated with the environment
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ClusterDefinitionListEntity">
      <summary>
        Cluster definition list alias class. Stores cluster definitions for the simulation as a linear list
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.PairDefinitionListEntity">
      <summary>
        Pair definition alias class. Stores pair definitions for the simulation as a linear list
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.JumpCollectionEntity">
      <summary>
        Jump collection entity. Defines and stores a collection of affiliated jump directions for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.JumpCollectionEntity._stateChangeDelegates">
      <summary>
        Static backing field for the transition model state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.JumpDirections">
      <summary>
        The list of affiliated jump direction entities
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.JumpRuleList">
      <summary>
        The list of existing jump roles for the collection
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.ObjectId">
      <summary>
        The object id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.SelectableParticlesMask">
      <summary>
        The particle mask that describes all possible selectable particles
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpCollectionEntity.JumpRuleListBinary">
      <summary>
        Jump rule list blob conversion backing property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.JumpDirectionEntity">
      <summary>
        Simulation jump direction entity. Defines and stores a single transition behavior for the simulation database
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.JumpDirectionEntity._stateChangeDelegates">
      <summary>
        Static backing field for the transition model state change actions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.StateChangeActions">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.JumpCollection">
      <summary>
        The jump collection navigation property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.JumpSequence">
      <summary>
        The jump sequence that describes the jump geometry relative to the origin point
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.MovementSequence">
      <summary>
        The movement sequence that describes the data for the movement tracking system
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.JumpCollectionId">
      <summary>
        The jump collection context key
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.ObjectId">
      <summary>
        The object id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.InvObjectId">
      <summary>
        The object id of the inverse direction in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.PositionId">
      <summary>
        The position id the jump direction in the simulation context is valid for
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.CollectionId">
      <summary>
        The jump collection id in the simulation context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.PathLength">
      <summary>
        The number of positions in the jump direction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.FieldProjectionFactor">
      <summary>
        The electric field projection factor of the jump
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.JumpSequenceBinary">
      <summary>
        The jump sequence blob conversion backing property
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.JumpDirectionEntity.MovementSequenceBinary">
      <summary>
        The movement sequence blob conversion backing property
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.JumpAssignTableEntity">
      <summary>
        Jump assign table entity alias class. Defines a 3D jump direction id mapping for the simulation database
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.JumpAssignTableEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.JumpAssignTableEntity.#ctor(System.Int32[0:,0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.JumpCountTableEntity">
      <summary>
        Jump count table entity alias class. Defines a 2D jump count lookup table for the simulation database
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.JumpCountTableEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.JumpCountTableEntity.#ctor(System.Int32[0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.JumpLinkSequenceEntity">
      <summary>
        Jump linq sequence entity alias class. Defines a linear list of jump links for the simulation database
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.JumpRuleListEntity">
      <summary>
        Jump rule list entity alias class. Describes a linear list of jump rule for a single jump collection in the
        simulation database
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.JumpSequenceEntity">
      <summary>
        Jump sequence entity alias class. Describes a set of 4D encoded crystal vectors that describe a jump geometry for
        the
        simulation database
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.MoveSequenceEntity">
      <summary>
        Move sequence entity alias class. Describes a set of movement information for the simulation database
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.TrackerAssignTableEntity">
      <summary>
        Tracker assign table entity alias class. Defines a 2D mapping for tracker indexing
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.TrackerAssignTableEntity.#ctor">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.TrackerAssignTableEntity.#ctor(System.Int32[0:,0:])">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.DbEntityBuilder">
      <summary>
        Abstract base class for implementations of simulation db entity builders
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.DbEntityBuilder.ModelContext">
      <summary>
        The project model context that the builder uses
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.DbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <summary>
        Creates new database entity builder for the provided model context
      </summary>
      <param name="modelContext"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.EntityBuilder.IEnergyDbEntityBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetPairEnergyTableEntities">
      <summary>
        Creates the list of interop pair energy database entities that result from the pair interaction models of the
        current energy model context
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetEnergyTableEntity(Mocassin.Model.Translator.ModelContext.IPairEnergyModel)">
      <summary>
        Creates a new pair energy database entity from the passed pair energy model
      </summary>
      <param name="pairModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetClusterEnergyTableEntities">
      <summary>
        Creates the list of interop cluster energy database entities that result from the group interaction models of the
        current energy model context
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetEnergyTableEntity(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        Creates a new cluster energy database entity from the passed group energy model
      </summary>
      <param name="groupModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetParticleToEnergyTableMapping(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        Get the mapping buffer that assigns each particle index its valid energy table row index for the passed group
        energy model and sets invalid entries to an invalid index
      </summary>
      <param name="groupModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.LinkModel(Mocassin.Model.Translator.SimulationEnergyModel)">
      <summary>
        Performs the internal linking for the passed energy database model
      </summary>
      <param name="simulationEnergyModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.GetDefectBackgroundEntity(Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Get the <see cref="T:Mocassin.Model.Translator.DefectBackgroundEntity" /> for the current
        <see cref="T:Mocassin.Model.Translator.ModelContext.IProjectModelContext" /> and passed
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel" />
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.EnergyDbEntityBuilder.CreateNewModel">
      <summary>
        Creates new energy database model with all values set to default
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.IEnergyDbEntityBuilder">
      <summary>
        Database entity builder that converts simulation model definitions from the model context into the required
        energy database model objects
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.IEnergyDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Builds a new energy database model for the passed simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.ILatticeDbEntityBuilder">
      <summary>
        Database entity builder that converts simulation model definitions from the model context into the required
        lattice database model objects using a configuration information
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.ILatticeDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel,Mocassin.Model.Translator.Jobs.LatticeConfiguration)">
      <summary>
        Builds a new simulation lattice model for the passed simulation model using the provided configuration information
      </summary>
      <param name="simulationModel"></param>
      <param name="latticeConfiguration"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.EntityBuilder.ILatticeDbEntityBuilder" />
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.Rng">
      <summary>
        Get or set the used <see cref="T:System.Random" /> number source
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.DopedByteLatticeSource">
      <summary>
        Get or set the <see cref="T:Mocassin.Model.Lattices.IDopedByteLatticeSource" />
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel,Mocassin.Model.Translator.Jobs.LatticeConfiguration)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.BuildLatticeModelEntity(Mocassin.Model.Translator.Jobs.LatticeConfiguration,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Builds the <see cref="T:Mocassin.Model.Translator.SimulationLatticeModel" /> for the passed
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" /> and
        <see cref="T:Mocassin.Model.Translator.Jobs.LatticeConfiguration" />
      </summary>
      <param name="latticeConfiguration"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.GetLatticeInfoEntity(Mocassin.Model.Translator.LatticeEntity,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Builds the <see cref="T:Mocassin.Model.Translator.CLatticeInfo" /> interop object for the passed set of
        <see cref="T:Mocassin.Model.Translator.LatticeEntity" /> and
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" />
      </summary>
      <param name="latticeEntity"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.InitializeBuildComponents">
      <summary>
        Initializes the missing build components of the entity builder
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.LatticeDbEntityBuilder.CountNumberOfMobiles(Mocassin.Model.Translator.LatticeEntity,Mocassin.Model.Translator.CLatticeInfo@,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Counts the number of mobiles and maximum number of selectable atoms the passed
        <see cref="T:Mocassin.Model.Translator.LatticeEntity" />
        contains and writes the to the passed <see cref="T:Mocassin.Model.Translator.CLatticeInfo" /> reference
      </summary>
      <param name="latticeEntity"></param>
      <param name="latticeInfo"></param>
      <param name="simulationModel"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.IStructureDbEntityBuilder">
      <summary>
        Database entity builder that converts simulation model definitions from the model context into the required
        structure database model objects
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.IStructureDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Builds a new structure database model for the passed simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.EntityBuilder.IStructureDbEntityBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.SetUpdateAndSelectionInformation(Mocassin.Model.Translator.SimulationStructureModel,Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Sets the update and selection info on the simulation structure model as describes by the passed simulation encoding
        model
      </summary>
      <param name="structureModel"></param>
      <param name="encodingModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetParticleSelectionMask(System.Int32,Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Creates the particle selection mask for the passed position id in the context of a simulation encoding model
      </summary>
      <param name="positionId"></param>
      <param name="encodingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetUpdateParticleIdBuffer(System.Int32,Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Builds the update particle id buffer for a position id that fits the provided simulation encoding model and removes
        always 0 energy entries from the update process
      </summary>
      <param name="positionId"></param>
      <param name="encodingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.ParticlePositionPairHasNonZeroEnergies(System.Int32,System.Byte)">
      <summary>
        Checks if a position id and particle id combination has any non zero energy entries in affiliated pair or group
        tables
      </summary>
      <param name="positionId"></param>
      <param name="particleId"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetStaticTrackerCountPerCell(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Get the number of static trackers per cell that the passed simulation model requires
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetGlobalTrackerCount(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Get the number of global trackers that the passed simulation model requires
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetInteractionRange">
      <summary>
        Get the wrapped <see cref="T:Mocassin.Model.Translator.CInteractionRange" /> interop object for the current project context
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetStructureMetaData(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Get the <see cref="T:Mocassin.Model.Translator.CStructureMetaData" /> object from the current project context that belongs to the passed
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" />
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetEnvironmentDefinitions">
      <summary>
        Get the list of environment definitions that is defined in the current project model context
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetEnvironmentDefinition(Mocassin.Model.Translator.ModelContext.IPositionModel)">
      <summary>
        Get the environment definition database entity for the passed position model
      </summary>
      <param name="positionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetParticleIdBuffer(Mocassin.Model.Particles.IParticleSet)">
      <summary>
        Get a 64 byte particle id buffer that contains the passed particle set ids that are not deprecated and sets all
        other values to the invalid id value
      </summary>
      <param name="particleSet"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetPairDefinitionList(Mocassin.Model.Translator.ModelContext.IPositionModel)">
      <summary>
        Get the pair definition list entity that results from the passed position model
      </summary>
      <param name="positionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetPairDefinitionStruct(Mocassin.Model.Translator.ModelContext.IPairInteractionModel,Mocassin.Model.Translator.ModelContext.ITargetPositionInfo)">
      <summary>
        Get the unmanaged C representation of the passed combination of pair interaction model an position info
      </summary>
      <param name="pairModel"></param>
      <param name="positionInfo"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetClusterDefinitionList(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IGroupInteractionModel})">
      <summary>
        Get the cluster definition list entity that results from the passed group interaction model list
      </summary>
      <param name="groupModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.GetClusterDefinitionStruct(Mocassin.Model.Translator.ModelContext.IGroupInteractionModel)">
      <summary>
        Get the unmanaged C representation of the passed group interaction model
      </summary>
      <param name="groupModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.CreateNewModel">
      <summary>
        Creates a new structure model with all basic data set to the default values
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.StructureDbEntityBuilder.LinkModel(Mocassin.Model.Translator.SimulationStructureModel)">
      <summary>
        Performs all required internal linking operations of the structure model and its components
      </summary>
      <param name="simulationStructureModel"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.ITransitionDbEntityBuilder">
      <summary>
        Database entity builder that converts simulation model definitions from the model context into the required
        transition database model objects
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.ITransitionDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Builds a new transition database model for the passed simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.EntityBuilder.ITransitionDbEntityBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.BuildModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.LinkModel(Mocassin.Model.Translator.SimulationTransitionModel)">
      <summary>
        Performs the internal linking operations for the passed transition model
      </summary>
      <param name="simulationTransitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpCountTableEntity(Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Get the jump count table database entity that can be extracted from the passed simulation encoding model
      </summary>
      <param name="encodingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpAssignTableEntity(Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel)">
      <summary>
        Get the jump assign table database entity that can be extracted from the passed simulation encoding model
      </summary>
      <param name="encodingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetStaticTrackerAssignTableEntity(Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel)">
      <summary>
        Get the static tracker assign table database entity that can be extracted from the passed simulation tracking model
      </summary>
      <param name="trackingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetGlobalTrackerAssignTableEntity(Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel)">
      <summary>
        Get the global tracker assign table database entity that can be extracted from the passed simulation tracking model
      </summary>
      <param name="trackingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpCollectionEntities(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Creates all jump collection database entities for the passed simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpCollectionEntity(Mocassin.Model.Translator.ModelContext.ITransitionModel,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Creates a jump collection database entity for the passed transition model in the context of the passed simulation
        model
      </summary>
      <param name="transitionModel"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpDirectionEntities(Mocassin.Model.Translator.ModelContext.ITransitionModel,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Get all jump direction database entities that are described by the passed transition model in the context of the
        defined simulation model
      </summary>
      <param name="transitionModel"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpDirectionEntity(Mocassin.Model.Translator.ModelContext.ITransitionMappingModel,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Translates a mapping model into a jump direction database entity in the context of the provided kinetic
        simulation model
      </summary>
      <param name="mappingModel"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpSequenceEntity(System.Collections.Generic.IEnumerable{Mocassin.Mathematics.ValueTypes.Vector4I})">
      <summary>
        Converts a set of encoded crystal vectors into a jump sequence database entity for the simulation
      </summary>
      <param name="crystalVectors"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetMovementSequenceEntity(Mocassin.Model.Translator.ModelContext.ITransitionMappingModel)">
      <summary>
        Creates the movement sequence database entity for the passed mapping model
      </summary>
      <param name="mappingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetJumpRuleListEntity(Mocassin.Model.Translator.ModelContext.ITransitionModel,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Get the jump rule list database entity that results for the passed transition model in the context of the passed
        simulation model
      </summary>
      <param name="transitionModel"></param>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.GetBasicJumpRule(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <summary>
        Creates a basic jump rule interop object from the passed transition rule model
      </summary>
      <param name="ruleModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.TransitionDbEntityBuilder.CreateNewModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Creates a default constructed transition database model that conforms to te passed simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder">
      <summary>
        Database entity builder that converts <see cref="T:Mocassin.Model.Translator.Jobs.IJobCollection" /> build instructions into
        <see cref="T:Mocassin.Model.Translator.SimulationJobPackageModel" /> database translations
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder.WhenJobIsBuild">
      <summary>
        Get the <see cref="T:System.IObservable`1" /> that informs about every build job
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder.ProjectModelContext">
      <summary>
        Get or seth the used project model context for translation
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder.BuildJobPackageModel(Mocassin.Model.Translator.Jobs.IJobCollection,System.Threading.CancellationToken)">
      <summary>
        Builds the simulation package model for the passed simulation job collection
      </summary>
      <param name="jobCollection"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder.BuildJobPackageModelAsync(Mocassin.Model.Translator.Jobs.IJobCollection)">
      <summary>
        Builds the simulation package model for the passed simulation job collection asynchronously
      </summary>
      <param name="jobCollection"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.IJobDbEntityBuilder.AddPostBuildOptimizer(Mocassin.Model.Translator.Optimization.IPostBuildOptimizer)">
      <summary>
        Attaches a simulation data optimizer to the package build process
      </summary>
      <param name="postBuildOptimizer"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.PostBuildOptimizers">
      <summary>
        Get the set of <see cref="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer" /> interfaces registered with the builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.JobIsBuildEvent">
      <summary>
        Get the <see cref="T:Mocassin.Framework.Events.ReactiveEvent`1" /> that is called on finished jobs
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.WhenJobIsBuild">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.ProjectModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.EnergyDbEntityBuilder">
      <summary>
        Get or set the energy db model builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.StructureDbEntityBuilder">
      <summary>
        Get or set the structure db model builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.TransitionDbEntityBuilder">
      <summary>
        Get or set the transition db model builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.LatticeDbEntityBuilder">
      <summary>
        Get or set the lattice db model builder
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContext)">
      <summary>
        Create new db model builder that uses the passed model context
      </summary>
      <param name="projectModelContext"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.BuildJobPackageModel(Mocassin.Model.Translator.Jobs.IJobCollection,System.Threading.CancellationToken)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.BuildJobPackageModelAsync(Mocassin.Model.Translator.Jobs.IJobCollection)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.AddPostBuildOptimizer(Mocassin.Model.Translator.Optimization.IPostBuildOptimizer)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.GetJobModels(Mocassin.Model.Translator.ModelContext.ISimulationModel,Mocassin.Model.Translator.Jobs.IJobCollection)">
      <summary>
        Creates a set of <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> from a
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" /> and
        <see cref="T:Mocassin.Model.Translator.Jobs.IJobCollection" />
      </summary>
      <param name="simulationModel"></param>
      <param name="jobCollection"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.GetJobModelBuildTasks(Mocassin.Model.Translator.ModelContext.ISimulationModel,Mocassin.Model.Translator.Jobs.IJobCollection,System.Threading.CancellationToken)">
      <summary>
        Creates a set of <see cref="T:Mocassin.Model.Translator.SimulationJobModel" /> build
        <see cref="T:System.Threading.Tasks.Task" /> instances from a
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" /> and
        <see cref="T:Mocassin.Model.Translator.Jobs.IJobCollection" />
      </summary>
      <param name="simulationModel"></param>
      <param name="jobCollection"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.GetJobModel(Mocassin.Model.Translator.ModelContext.ISimulationModel,Mocassin.Model.Translator.Jobs.JobConfiguration,Mocassin.Model.Translator.Jobs.IJobCollection)">
      <summary>
        Get a new job model database object for the
        <see cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModel" /> using the provided
        <see cref="T:Mocassin.Model.Translator.Jobs.JobConfiguration" /> and
        <see cref="T:Mocassin.Model.Translator.Jobs.IJobCollection" />
      </summary>
      <param name="simulationModel"></param>
      <param name="jobConfiguration"></param>
      <param name="jobCollection"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.GetJobMetaDataEntity(Mocassin.Model.Translator.Jobs.JobConfiguration,Mocassin.Model.Translator.Jobs.IJobCollection)">
      <summary>
        Get a <see cref="T:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity" /> for the passed
        <see cref="T:Mocassin.Model.Translator.Jobs.JobConfiguration" />
      </summary>
      <param name="jobConfiguration"></param>
      <param name="jobCollection"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.AddKineticMetaData(Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity,Mocassin.Model.Translator.Jobs.JobConfiguration)">
      <summary>
        Adds meta information to the passed
        <see cref="T:Mocassin.Model.Translator.Database.Entities.Other.Meta.JobMetaDataEntity" /> specific to
        <see cref="T:Mocassin.Model.Translator.Jobs.KmcJobConfiguration" />
        if possible
      </summary>
      <param name="jobMetaData"></param>
      <param name="jobConfiguration"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.SetSimulationJobInfoFlags(Mocassin.Model.Translator.SimulationJobModel,Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Set the simulation type flags according to a simulation model in the passed prepared simulation job model
      </summary>
      <param name="jobModel"></param>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.CreatePackageModel(Mocassin.Model.Translator.ModelContext.ISimulationModel)">
      <summary>
        Creates a new default package model for the passed simulation model
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.LinkPackageModel(Mocassin.Model.Translator.SimulationJobPackageModel)">
      <summary>
        Performs the required internal link operations on the passed simulation job package model
      </summary>
      <param name="packageModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.RunPostBuildOptimizers(Mocassin.Model.Translator.SimulationJobPackageModel,Mocassin.Model.Translator.Jobs.IJobCollection)">
      <summary>
        Calls all attached <see cref="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer" /> and additionally defined ones of
        <see cref="T:Mocassin.Model.Translator.Jobs.IJobCollection" /> and removes invalidated
        <see cref="T:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags" />
      </summary>
      <param name="packageModel"></param>
      <param name="jobCollection"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.EntityBuilder.JobDbEntityBuilder.PrepareBuildComponents">
      <summary>
        Sets all null db builder components to use the default build system
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropObject">
      <summary>
        Non generic base class for all wrapped interop objects that can switch between object and binary unmanaged
        representation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropObject.ByteCount">
      <summary>
        Get the size of the binary state of the object
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropObject.ToBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Write the internal object information to its unmanaged representation using the provided target buffer
      </summary>
      <param name="targetBuffer"></param>
      <param name="offset"></param>
      <param name="marshalService"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropObject.FromBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <summary>
        Read the internal object information from its unmanaged representation using the provided source buffer
      </summary>
      <param name="sourceBuffer"></param>
      <param name="offset"></param>
      <param name="marshalService"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropObject.Create``1(``0@)">
      <summary>
        Factory method that creates an interop object wrapper for the passed structure
      </summary>
      <typeparam name="TStruct"></typeparam>
      <param name="structure"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.InteropObject`1">
      <summary>
        Generic adapter for wrapping interop structures into a net object. Supports marshalling of the wrapped structure
      </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="F:Mocassin.Model.Translator.InteropObject`1.structure">
      <summary>
        The wrapped structure
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropObject`1.Structure">
      <summary>
        Reference access to the wrapped structure
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.InteropObject`1.ByteCount">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.InteropObject`1.#ctor(`0)">
      <summary>
        Create new interop object base wrapping the passed structure
      </summary>
      <param name="structure"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.InteropObject`1.#ctor">
      <summary>
        Creates an <see cref="T:Mocassin.Model.Translator.InteropObject" />
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropObject`1.ToBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.InteropObject`1.FromBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.EmptyInteropObject">
      <summary>
        Represents an interop object that has no bytes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.EmptyInteropObject.ByteCount">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EmptyInteropObject.ToBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.EmptyInteropObject.FromBinary(System.Byte[],System.Int32,Mocassin.Model.Translator.IMarshalService)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.CJobInfo">
      <summary>
        Simulation job info object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CKmcJobHeader">
      <summary>
        Simulation job info object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CMmcJobHeader">
      <summary>
        Simulation job info object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CLatticeInfo">
      <summary>
        Simulation lattice info object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CArrayAccess">
      <summary>
        C array access object. Placeholder for array access structs with 4 byte count field
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CByteBuffer64">
      <summary>
        64 entry byte buffer. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CLongPtr">
      <summary>
        Long pointer object. Placeholder for 8 byte pointers on unmanaged objects
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CMdaAccess">
      <summary>
        C multidimensional array access object. Placeholder for array access structs with 3 long pointers
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CStateCode">
      <summary>
        C state code object. Layout marshals to its unmanaged 'C' counterpart
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CVector3">
      <summary>
        Simulation Vector 3 object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CVector4">
      <summary>
        Simulation Vector 4 object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CClusterInteraction">
      <summary>
        Simulation cluster definition object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.CClusterInteraction.pairInteractionIds">
      <summary>
        Backing field for cluster id encoding by <see cref="T:Mocassin.Model.Translator.CPairInteraction" /> objects
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CClusterInteraction.ClusterTableId">
      <summary>
        The affiliated <see cref="T:Mocassin.Model.Translator.ClusterEnergyTableEntity" /> object id
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CClusterInteraction.RelativePositionIds">
      <summary>
        Get or set the cluster id encoding by <see cref="T:Mocassin.Model.Translator.CPairInteraction" /> objects
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CInteractionRange">
      <summary>
        Simulation interaction range object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CInteractionRange.Vector">
      <summary>
        The interaction range as a <see cref="T:Mocassin.Model.Translator.CVector4" /> object
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CPairInteraction">
      <summary>
        Simulation pair interaction definition. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CPairInteraction.RelativeVector">
      <summary>
        The relative 4D vector to the target
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CPairInteraction.PairTableId">
      <summary>
        The affiliated energy table id of the interaction
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CStructureMetaData">
      <summary>
        Simulation structure meta data Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.CStructureMetaData.particleCharges">
      <summary>
        The array for <see cref="T:Mocassin.Model.Particles.IParticle" /> charges for each index
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CStructureMetaData.NormalizedElectricFieldVector">
      <summary>
        The normalized electric field vector
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CStructureMetaData.UnitCellVectorA">
      <summary>
        The cell vector for direction A in units of [Ang]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CStructureMetaData.UnitCellVectorB">
      <summary>
        The cell vector for direction B in units of [Ang]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CStructureMetaData.UnitCellVectorC">
      <summary>
        The cell vector for direction C in units of [Ang]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.CStructureMetaData.ParticleCharges">
      <summary>
        Get or set the cluster id encoding by <see cref="T:Mocassin.Model.Translator.CPairInteraction" /> objects
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CJumpLink">
      <summary>
        Simulation jump link object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CJumpRule">
      <summary>
        Jump rule simulation object Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.CMoveVector">
      <summary>
        Simulation Vector 3 object. Layout marshals to its binary unmanaged 'C' representation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer">
      <summary>
        Common interface for simulation parametrization data optimizers that optimize the contents of a simulation package
        for runtime after the build process
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer.Run(Mocassin.Model.Translator.ModelContext.IProjectModelContext,Mocassin.Model.Translator.SimulationJobPackageModel)">
      <summary>
        Optimizes the completely build passed simulation job package data in the context of the model project and returns
        the set of invalidated <see cref="T:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags" />
      </summary>
      <param name="modelContext"></param>
      <param name="jobPackage"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer">
      <summary>
        Optimizer that removes particles from the
        <see cref="T:Mocassin.Model.Translator.EnvironmentDefinitionEntity" /> objects of a
        <see cref="T:Mocassin.Model.Translator.SimulationJobPackageModel" /> to improve simulation performance
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.ModelContext">
      <summary>
        The current project model context that is used for the optimization process
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.JobPackage">
      <summary>
        The current job package that the optimizer is handling
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.RemoveCombinations">
      <summary>
        The list of <see cref="T:Mocassin.Model.Particles.IParticle" /> objects to remove on their affiliated
        <see cref="T:Mocassin.Model.Structures.ICellSite" />
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.Run(Mocassin.Model.Translator.ModelContext.IProjectModelContext,Mocassin.Model.Translator.SimulationJobPackageModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.GetOptimizedSelectionParticles(Mocassin.Model.Translator.EnvironmentDefinitionEntity)">
      <summary>
        Optimizes the <see cref="T:Mocassin.Model.Particles.IParticleSet" /> that is defined as selectable on each
        <see cref="T:Mocassin.Model.Translator.EnvironmentDefinitionEntity" />
      </summary>
      <param name="environmentDefinition"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Optimization.JumpSelectionOptimizer.DecodeSelectionMask(System.Int64)">
      <summary>
        Decodes the passed particle selection mask into the affiliated particle set
      </summary>
      <param name="mask"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags">
      <summary>
        Basic simulation job flags that are shared between the different simulation types. These flags are used by the internal system
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.None">
      <summary>
        Marks nothing
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.KmcSimulation">
      <summary>
        Marks simulation as a KMC job
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.MmcSimulation">
      <summary>
        Marks a simulation as an MMC job
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.UsePrerun">
      <summary>
        Marks a simulation to use a pre-run routine
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.NoSaving">
      <summary>
        Marks a simulation to skip the binary state save process
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.UseDualDofCorrection">
      <summary>
        Marks a simulation to correct the dual-definition of degrees of freedom (Only relevant to KMC time-stepping
        calculation)
      </summary>
      <remarks>
        In a completely unoptimized simulation every degree of freedom exists twice in the system which causes
        invalid time calculation
      </remarks>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.NoJumpLogging">
      <summary>
        Marks a simulation to skip the time expensive jump logging step into a histogram (KMC only)
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags.UseFastExp">
      <summary>
        Marks a simulation to use the fast exponential approximation by N. Schraudolph
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.SimulationExecutionOverwriteFlags">
      <summary>
        Custom simulation job flags that provides customizable parts of
        <see cref="T:Mocassin.Model.Translator.Jobs.SimulationExecutionFlags" /> as overwrites
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionOverwriteFlags.NoSaving">
      <summary>
        Marks the simulation to not generate state dumps as checkpoints
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionOverwriteFlags.NoJumpLogging">
      <summary>
        Marks a simulation to skip the time expensive jump logging step into a histogram (KMC only)
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.Jobs.SimulationExecutionOverwriteFlags.UseFastExp">
      <summary>
        Marks a simulation to use the fast exponential approximation by N. Schraudolph
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.SimulationStateFlags">
      <summary>
        The general simulation status flags that are shared between the simulation types
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.SimulationKmcJobFlags">
      <summary>
        The kinetic monte carlo specific simulation job flags defined in the job header
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.SimulationMmcJobFlags">
      <summary>
        The metropolis monte carlo specific simulation job flags defined in the job header
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.IJobCollection">
      <summary>
        Represents a job collection that bundles multiple job configurations for simulation database creation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.IJobCollection.CollectionId">
      <summary>
        Get the id of the collection in its current context
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.IJobCollection.GetSimulation">
      <summary>
        Get the simulation model object the collection is valid for
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.IJobCollection.GetPostBuildOptimizers">
      <summary>
        Get the set of defined <see cref="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer" /> for the translation operation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.KmcJobCollection">
      <summary>
        A simulation job collection for multiple kinetic monte carlo simulation jobs as a single package
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobCollection.Simulation">
      <summary>
        Get or set the kinetic simulation the job is valid for
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobCollection.JobConfigurations">
      <summary>
        Get or set the list of job configurations
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobCollection.PostBuildOptimizers">
      <summary>
        Get or set the list of used <see cref="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobCollection.CollectionId">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobCollection.GetSimulation">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobCollection.GetPostBuildOptimizers">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobCollection.GetEnumerator">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobCollection.System#Collections#IEnumerable#GetEnumerator">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.MmcJobCollection">
      <summary>
        A simulation job collection for multiple metropolis monte carlo simulation jobs as a single package
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobCollection.Simulation">
      <summary>
        Get or set the kinetic simulation the job is valid for
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobCollection.JobConfigurations">
      <summary>
        Get or set the list of job configurations
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobCollection.PostBuildOptimizers">
      <summary>
        Get or set the list of used <see cref="T:Mocassin.Model.Translator.Optimization.IPostBuildOptimizer" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobCollection.CollectionId">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobCollection.GetSimulation">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobCollection.GetPostBuildOptimizers">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobCollection.GetEnumerator">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobCollection.System#Collections#IEnumerable#GetEnumerator">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.JobConfiguration">
      <summary>
        Abstract base class for job configuration implementations that holds common job information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.ExecutionFlags">
      <summary>
        Get or set additional job info flags
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.TargetMcsp">
      <summary>
        Get or set the target mcsp of the job
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.TimeLimit">
      <summary>
        Get or set the time limit of the simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.RngStateSeed">
      <summary>
        Get or set the random number generator state seed
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.RngIncreaseSeed">
      <summary>
        Get or set the random number generator increase seed
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.Temperature">
      <summary>
        Get or set the temperature value in [K]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.MinimalSuccessRate">
      <summary>
        Get or set the minimal success rate
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.LatticeConfiguration">
      <summary>
        Get or set the job lattice configuration
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.JobIndex">
      <summary>
        Get or set the local index for the job in the config
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.ConfigIndex">
      <summary>
        Get or set the index for the parent config
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.CollectionName">
      <summary>
        Get or set the source job collection name
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.ConfigName">
      <summary>
        Get or set the source configuration name
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.JobConfiguration.Instruction">
      <summary>
        Get or set the attached instruction string
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Jobs.JobConfiguration.CopyTo(Mocassin.Model.Translator.Jobs.JobConfiguration)">
      <summary>
        Copies all data to the passed job configuration
      </summary>
      <param name="jobConfiguration"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.JobConfiguration.GetInteropJobInfo">
      <summary>
        Get the job configuration as an interop object
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.JobConfiguration.GetInteropJobHeader">
      <summary>
        Get the job header as an interop object
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.JobConfiguration.DeepCopy">
      <summary>
        Creates a deep copy of the <see cref="T:Mocassin.Model.Translator.Jobs.JobConfiguration" />
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.KmcJobConfiguration">
      <summary>
        A kinetic monte carlo job configuration fo a single simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.PreRunMcsp">
      <summary>
        Get or set the pre run mcsp of the simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.ElectricFieldModulus">
      <summary>
        Get or set the modulus of the electric field in [V/m]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.FixedNormalizationFactor">
      <summary>
        Get or set the fixed normalization factor
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.BaseFrequency">
      <summary>
        Get or set the base attempt frequency
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.#ctor">
      <summary>
        Creates new configuration with a norm factor of 1.0
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.CopyTo(Mocassin.Model.Translator.Jobs.KmcJobConfiguration)">
      <summary>
        Copies the data to another kmc job configuration
      </summary>
      <param name="jobConfiguration"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.GetInteropJobHeader">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.KmcJobConfiguration.DeepCopy">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.MmcJobConfiguration">
      <summary>
        A metropolis monte carlo job configuration fo a single simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.AbortTolerance">
      <summary>
        Get or set the abort tolerance value
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.AbortSequenceLength">
      <summary>
        Get or set the abort sequence length
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.AbortSampleLength">
      <summary>
        Gte or set the abort sample length
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.AbortSampleInterval">
      <summary>
        Get or set the abort sample interval
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.CopyTo(Mocassin.Model.Translator.Jobs.MmcJobConfiguration)">
      <summary>
        Copies the data to another mmc job configuration
      </summary>
      <param name="jobConfiguration"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.GetInteropJobHeader">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.MmcJobConfiguration.DeepCopy">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.Jobs.LatticeConfiguration">
      <summary>
        A lattice configuration for a simulation job that carries lattice build instructions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.LatticeConfiguration.SizeA">
      <summary>
        Get or set the size in cell direction A
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.LatticeConfiguration.SizeB">
      <summary>
        Get or set the size in cell direction B
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.LatticeConfiguration.SizeC">
      <summary>
        Get or set the size in cell direction C
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.Jobs.LatticeConfiguration.DopingConcentrations">
      <summary>
        Get or set the doping concentrations
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.Jobs.LatticeConfiguration.CopyTo(Mocassin.Model.Translator.Jobs.LatticeConfiguration)">
      <summary>
        Copies the information to another lattice configuration
      </summary>
      <param name="latticeConfiguration"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.LatticeConfiguration.GetSizeVector">
      <summary>
        Get the size as an <see cref="T:Moccasin.Mathematics.ValueTypes.VectorI3" />
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.LatticeConfiguration.GetSizeString">
      <summary>
        Get set size as a default formatted <see cref="T:System.String" />
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.Jobs.LatticeConfiguration.GetDopingString">
      <summary>
        Get the set dopings as a default formatted <see cref="T:System.String" />
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.TranslatorExtensions">
      <summary>
        Extension methods for the translator and data context related functionality
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.TranslatorExtensions.UnmanagedToByteArray``1(System.Collections.Generic.IEnumerable{``0},System.Byte[],System.Int32)">
      <summary>
        Marshals a sequence of structs into the provided buffer byte array starting at the given index
      </summary>
      <typeparam name="T"></typeparam>
      <param name="values"></param>
      <param name="target"></param>
      <param name="startByte"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.TranslatorExtensions.ByteArrayToUnmanaged``1(System.Byte[],System.Int32)">
      <summary>
        Marshals a binary array into a sequence of structs beginning at the provided index
      </summary>
      <typeparam name="T"></typeparam>
      <param name="array"></param>
      <param name="startByte"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.TranslatorExtensions.ByteArrayToStruct``1(System.Byte[])">
      <summary>
        Marshals a byte array into a single struct
      </summary>
      <typeparam name="TUnmanaged"></typeparam>
      <param name="binary"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.IMarshalService">
      <summary>
        Represents a marshal service provider that handles conversion between structures and byte array representations
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.IMarshalService.GetStructure``1(System.Byte[],System.Int32)">
      <summary>
        Translates the bytes starting at the provided buffer offset to the defined structure
      </summary>
      <typeparam name="TStruct"></typeparam>
      <param name="buffer"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.IMarshalService.GetStructure(System.Byte[],System.Int32,System.Type)">
      <summary>
        Translates the bytes starting at the provided buffer offset to the defined structure type
      </summary>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="structType"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.IMarshalService.GetBytes``1(System.Byte[],System.Int32,``0@)">
      <summary>
        Translates the provided structure to its byte representation into the provided buffer starting at an offset
      </summary>
      <typeparam name="TStruct"></typeparam>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="structure"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.IMarshalService.GetBytes``1(System.Byte[],System.Int32,System.Collections.Generic.IEnumerable{``0})">
      <summary>
        Marshal all the passed structures to the passed byte buffer stating at the specified offset
      </summary>
      <typeparam name="TStruct"></typeparam>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="structures"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.IMarshalService.GetStructures``1(System.Byte[],System.Int32,System.Int32)">
      <summary>
        Marshals the contents of the passed byte buffer enclosed by offset and upper bound to many structures
      </summary>
      <typeparam name="TStruct"></typeparam>
      <param name="buffer"></param>
      <param name="offset"></param>
      <param name="upperBound"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.MarshalMemoryProvider">
      <summary>
        Provides thread safe access to unmanaged memory for marshal operations of structs
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MarshalMemoryProvider.LockObj">
      <summary>
        The lock object to mark that the target is in use
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MarshalMemoryProvider.Pointer">
      <summary>
        Pointer to unmanaged memory
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MarshalMemoryProvider.TypeSize">
      <summary>
        Size of the unmanaged memory
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalMemoryProvider.#ctor(System.IntPtr,System.Int32)">
      <summary>
        Creates new marshal memory provider
      </summary>
      <param name="pointer"></param>
      <param name="typeSize"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalMemoryProvider.Dispose">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalMemoryProvider.GetLocked">
      <summary>
        Tries to get an exclusive lock on the target
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalMemoryProvider.Unlock">
      <summary>
        Unlocks the target
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.LockedMarshalMemory">
      <summary>
        Locked marshal memory that encapsulates a marshal memory provider and unlocks it on dispose
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.LockedMarshalMemory.MemoryProvider">
      <summary>
        The locked marshal memory provider
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.LockedMarshalMemory.Pointer">
      <summary>
        Get the unmanaged memory pointer
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.LockedMarshalMemory.TypeSize">
      <summary>
        Get the size of the structure
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.LockedMarshalMemory.#ctor(Mocassin.Model.Translator.MarshalMemoryProvider)">
      <summary>
        Creates a <see cref="T:Mocassin.Model.Translator.LockedMarshalMemory" /> using a
        <see cref="T:Mocassin.Model.Translator.MarshalMemoryProvider" />
      </summary>
      <param name="memoryProvider"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.LockedMarshalMemory.Dispose">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.MarshalService">
      <inheritdoc cref="T:Mocassin.Model.Translator.IMarshalService" />
    </member>
    <member name="P:Mocassin.Model.Translator.MarshalService.PoolLock">
      <summary>
        Object to look the target pool
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.MarshalService.MarshalTargetPool">
      <summary>
        Marshal target pool dictionary. Holds list of unmanaged marshal memory providers for each type
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.#ctor">
      <summary>
        Create new default marshal provider
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.Dispose">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetStructure``1(System.Byte[],System.Int32)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetStructure(System.Byte[],System.Int32,System.Type)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetStructures``1(System.Byte[],System.Int32,System.Int32)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetBytes``1(System.Byte[],System.Int32,``0@)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.MarshalService.GetBytes``1(System.Byte[],System.Int32,System.Collections.Generic.IEnumerable{``0})">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetMemoryProvider(System.Type)">
      <summary>
        Gets a free marshal memory provider for the provided type
      </summary>
      <param name="structType"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetMemoryProviderList(System.Type)">
      <summary>
        Gets the marshal target list for the provided type
      </summary>
      <param name="structType"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.MarshalService.GetNewMarshalMemoryProvider(System.Type)">
      <summary>
        Get a new marshal memory provider for the provided type
      </summary>
      <param name="structType"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1">
      <summary>
        Generic awaitable model context builder for asynchronous creation of extended model data context objects
      </summary>
      <typeparam name="TContext"></typeparam>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.BuildTask">
      <summary>
        Get the currently active build task
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.BuildContext">
      <summary>
        Builds a default context from the currently linked project reference data
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.BuildLinkDependentComponents">
      <summary>
        Builds all link dependent components on the context
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.RebuildContext(`0)">
      <summary>
        Rebuilds on the passed model context instead of creating a new one
      </summary>
      <param name="modelContext"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.CheckBuildRequirements">
      <summary>
        Checks if the requirements to build non link dependent components are met
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IModelContextBuilder`1.CheckLinkDependentBuildRequirements">
      <summary>
        Checks if the requirements to build the link dependent components are met
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ModelBuilderBase">
      <summary>
        Abstract base class for model component builders
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ModelBuilderBase.ModelProject">
      <summary>
        The project instance used for model reference access
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ModelBuilderBase.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <summary>
        Create new model builder base with the provided project access
      </summary>
      <param name="modelProject"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.BuildTask">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.ModelProject">
      <summary>
        The project service for access to the reference model data
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.ProjectModelContextBuilder">
      <summary>
        The project model context builder for access to affiliated model context build processes
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <summary>
        Create new model context builder with the provided project access and default internally defined builders
      </summary>
      <param name="projectModelContextBuilder"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.BuildContext">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.BuildLinkDependentComponents">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.RebuildContext(`0)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.CheckBuildRequirements">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.CheckLinkDependentBuildRequirements">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.PopulateContext(`0)">
      <summary>
        Populates the passed context and returns the object on completion
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.GetEmptyDefaultContext">
      <summary>
        Creates a new empty context as defined in the implementing builder
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ModelContextBuilderBase`1.SetNullBuildersToDefault">
      <summary>
        Sets all unset builder instances to the internally defined default builder system
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IModelComponent">
      <summary>
        Represents a model component in the extended model context that can be indexed
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IModelComponent.ModelId">
      <summary>
        The index of the model component in the context
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ModelComponentBase">
      <summary>
        Abstract base class for model component implementations that form the model data context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ModelComponentBase.ModelId">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo">
      <summary>
        Carries information about a target position and its affiliated
        <see cref="T:Mocassin.Model.Translator.ModelContext.IPairInteractionModel" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.PairInteractionModel">
      <summary>
        Get or set the affiliated <see cref="T:Mocassin.Model.Translator.ModelContext.IPairInteractionModel" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.CellSite">
      <summary>
        The unit cell position at the target
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.Distance">
      <summary>
        The distance to the target in internal units
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.AbsoluteFractional">
      <summary>
        Absolute fractional vector of the target
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.RelativeFractional">
      <summary>
        Relative fractional vector to the target
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.AbsoluteCartesian">
      <summary>
        Absolute cartesian vector of the target
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo.RelativeCrystalVector">
      <summary>
        Relative crystal vector to the target
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TargetPositionInfo">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.PairInteractionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.CellSite">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.Distance">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.AbsoluteFractional">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.RelativeFractional">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.AbsoluteCartesian">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TargetPositionInfo.RelativeCrystalVector">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationConstants">
      <summary>
        Static class that contains constant values used within the 'C' simulator
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.InvalidId">
      <summary>
        The index value that is generally used for an invalid index on simulation side
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.InvalidParticleId">
      <summary>
        The index of invalid particles in the simulation
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.JumpCountIfNotMobile">
      <summary>
        The jump count value if a species is completely immobile
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.JumpCountIfPassivelyMobile">
      <summary>
        The jump count value if a species cannot be selected directly but can be dragged by another transition
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.PositiveRuleDirectionFactor">
      <summary>
        The jump direction influence factor for the positive rule direction
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.NegativeRuleDirectionFactor">
      <summary>
        The jump direction influence factor for the negative rule direction
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.SimulationConstants.UndefinableRuleDirectionFactor">
      <summary>
        The jump direction influence factor for the undefinable rule direction (e.g. metropolis case)
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IEnergyModelContextBuilder" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.GroupEnergyModelBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.PairEnergyModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.CheckBuildRequirements">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.CheckLinkDependentBuildRequirements">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.PopulateContext(Mocassin.Model.Translator.ModelContext.IEnergyModelContext)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.GetEmptyDefaultContext">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.EnergyModelContextBuilder.SetNullBuildersToDefault">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IEnergyModelContextBuilder">
      <summary>
        Energy model context builder. Extends the energy reference information of a project into a full data context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnergyModelContextBuilder.GroupEnergyModelBuilder">
      <summary>
        The builder instance for group energy models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnergyModelContextBuilder.PairEnergyModelBuilder">
      <summary>
        The builder instance for pair energy models
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.EnergyModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnergyModelContext.PairEnergyModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnergyModelContext.GroupEnergyModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnergyModelContext.DefectEnergies">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IEnergyModelContext">
      <summary>
        Represents an energy model context that provides all reference energy information of the project
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnergyModelContext.PairEnergyModels">
      <summary>
        The list of existing pair energy models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnergyModelContext.GroupEnergyModels">
      <summary>
        The list of existing group energy models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnergyModelContext.DefectEnergies">
      <summary>
        The list of all possible non-zero defect energies
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IGroupEnergyModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Energies.IGroupInteraction})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.CreateEnergyModel(Mocassin.Model.Energies.IGroupInteraction,System.Collections.Generic.IReadOnlyList{Mocassin.Model.Energies.IPositionGroupInfo},System.Int32@)">
      <summary>
        Builds a group energy model from the passed group interaction, position group infos and index counter
      </summary>
      <param name="groupInteraction"></param>
      <param name="positionGroupInfos"></param>
      <param name="index"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.CreateSymmetryExtendedEnergyInfoOnModel(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        CBuilds an copies all symmetry extended energy and occupation information on the passed model
      </summary>
      <param name="energyModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.RestoreSymmetryReducedInformation(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        Restores the full set of group energy entries and occupation states of a group energy model
      </summary>
      <param name="groupEnergyModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.CreateAllGroupLookupCodesOnModel(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        Creates the sorted list of group lookup codes
      </summary>
      <param name="groupEnergyModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModelBuilder.CreateGroupEnergyTableOnModel(Mocassin.Model.Translator.ModelContext.IGroupEnergyModel)">
      <summary>
        Creates the energy table of the group an adds it to the group energy model
      </summary>
      <param name="groupEnergyModel"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IGroupEnergyModelBuilder">
      <summary>
        Builder for group energy models that fully describe the energetic properties of a simulation position group
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IGroupEnergyModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Energies.IGroupInteraction})">
      <summary>
        Builds all group energy models from te passed list of group interactions
      </summary>
      <param name="groupInteractions"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.GroupEnergyModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.GroupInteraction">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.PositionGroupInfo">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.OccupationStates">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.EnergyEntries">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.GroupLookupCodes">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.ParticleIndexToTableMapping">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.EnergyTable">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.GroupEnergyModel.#ctor(Mocassin.Model.Energies.IGroupInteraction)">
      <summary>
        Create new group energy model for the passed group interaction
      </summary>
      <param name="groupInteraction"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel">
      <summary>
        Describes a single group energy model with an energy table and reference geometry info
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.GroupInteraction">
      <summary>
        The group interaction the interaction model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.OccupationStates">
      <summary>
        The list of existing occupation states for the group
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.EnergyEntries">
      <summary>
        Energy entry list that contains all possible combinations of center and surrounding occupation with energy value
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.PositionGroupInfo">
      <summary>
        The position group info that describes extended symmetry information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.GroupLookupCodes">
      <summary>
        The sorted list of all existing group lookup codes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.ParticleIndexToTableMapping">
      <summary>
        Dictionary that assigns each possible center particle a redirection index to reduce the table size
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupEnergyModel.EnergyTable">
      <summary>
        The energy table for the group interaction that enables energy lookup by redirected center particle
        index and lookup code index
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPairEnergyModelBuilder">
      <summary>
        Builder for pair energy models that fully describe the energetic properties of pair interactions
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IPairEnergyModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Energies.IPairInteraction})">
      <summary>
        Builds all pair energy models for the passed set of pair interactions
      </summary>
      <param name="pairInteractions"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPairEnergyModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Energies.IPairInteraction})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder.CreateEnergyModel(Mocassin.Model.Energies.IPairInteraction,System.Int32@)">
      <summary>
        Creates a pair energy model from a pair interaction
      </summary>
      <param name="pairInteraction"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder.CopyEnergyEntriesToModel(Mocassin.Model.Translator.ModelContext.IPairEnergyModel)">
      <summary>
        Copies all energy entries of the set interaction into the energy model list an returns the largest found particle
        indices for center and partner
      </summary>
      <param name="energyModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModelBuilder.CreateEnergyTable(System.Collections.Generic.IList{Mocassin.Model.Energies.PairEnergyEntry},System.Int32,System.Int32)">
      <summary>
        Builds the energy table based upon the passed energy entry collection and index limits
      </summary>
      <param name="energyEntries"></param>
      <param name="maxCenterIndex"></param>
      <param name="maxPartnerIndex"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPairEnergyModel">
      <summary>
        Describes a single pair energy model with energy table and reference geometry information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.IsAsymmetric">
      <summary>
        Boolean flag that indicates if the interaction behaves asymmetrically
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.PairInteraction">
      <summary>
        The pair interaction the model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.EnergyEntries">
      <summary>
        The list of existing energy entries in the pair energy model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.EnergyTable">
      <summary>
        The pair energy table that assigns each particle index pair an energy value
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.TryGetEnergy(Mocassin.Model.Particles.IParticle,Mocassin.Model.Particles.IParticle,System.Double@)">
      <summary>
        Tries to get an energy value based upon a center particle and an interacting one
      </summary>
      <param name="centerParticle"></param>
      <param name="other"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IPairEnergyModel.GetMaxParticleIndex">
      <summary>
        Get the last particle index in the pair interaction model
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PairEnergyModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPairEnergyModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairEnergyModel.IsAsymmetric">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairEnergyModel.PairInteraction">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairEnergyModel.EnergyEntries">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairEnergyModel.EnergyTable">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModel.#ctor(Mocassin.Model.Energies.IPairInteraction)">
      <summary>
        Create new pair energy model for the provided pair interaction
      </summary>
      <param name="pairInteraction"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModel.TryGetEnergy(Mocassin.Model.Particles.IParticle,Mocassin.Model.Particles.IParticle,System.Double@)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.PairEnergyModel.GetMaxParticleIndex">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder">
      <summary>
        Represents a project model context builder that coordinates the building process of the model context components
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.ModelProject">
      <summary>
        Data access to the project reference data the builder uses
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.ProjectModelContextBuildTask">
      <summary>
        The project model context build task that is currently running
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.ProjectModelContextLinker">
      <summary>
        The project context linker that creates component interconnections
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.EnergyModelContextBuilder">
      <summary>
        Get or set the energy model context builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.StructureModelContextBuilder">
      <summary>
        Get or set the structure model context builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.TransitionModelContextBuilder">
      <summary>
        Get or set the transition model context builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.SimulationModelContextBuilder">
      <summary>
        Get or set the simulation model context builder
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder.BuildContextAsync">
      <summary>
        Builds a new project model context from the current model project
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.ModelProject">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.ProjectModelContextBuildTask">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.ProjectModelContextLinker">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.EnergyModelContextBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.StructureModelContextBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.TransitionModelContextBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.SimulationModelContextBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <summary>
        Build a new context builder that uses the provided project access as a reference data source
      </summary>
      <param name="modelProject"></param>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.BuildContextAsync">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.BuildContextComponents">
      <summary>
        Creates all context components independently and awaits their completion
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.BuildLinkDependentComponents">
      <summary>
        Calls the link dependent build routines on all context builders
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextBuilder.SetUnknownBuildSystemsToDefault">
      <summary>
        Set all builder components that are null to a default build system
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IProjectModelContextLinker">
      <summary>
        Model context linker that creates interconnection between raw build context elements
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IProjectModelContextLinker.LinkContextComponents(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <summary>
        Awaits the build processes of the passed model context builder and links finished components
      </summary>
      <param name="contextBuilder"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.ProjectModelContextBuilder">
      <summary>
        The project model context builder that creates the linkable context components
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.StructureModelContext">
      <summary>
        The simulation model context that is linked
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.EnergyModelContext">
      <summary>
        The simulation model context that is linked
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.TransitionModelContext">
      <summary>
        The simulation model context that is linked
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.SimulationModelContext">
      <summary>
        The simulation model context that is linked
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkContextComponents(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkStructureComponents">
      <summary>
        Links all externally build structure related components into the structure context object
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkPositionTransitionModelsIntoStructure">
      <summary>
        Links the position transition models into the structure context
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkEnergyModelsIntoStructure">
      <summary>
        Links the pair and group energy models into the structure context
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkSimulationComponents">
      <summary>
        Links the simulation context components to their affiliated objects from other context objects
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkTransitionsIntoMetropolisModel">
      <summary>
        Links the transition models into the metropolis simulations by replacing internal placeholders
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.LinkTransitionsIntoKineticModel">
      <summary>
        Links the transition models into the kinetic simulations by replacing internal placeholders
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ProjectModelContextLinker.SetContextBuildResults">
      <summary>
        Awaits and sets the main context build results for linking
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ProjectContextFlags">
      <summary>
        Defines status flags for the <see cref="T:Mocassin.Model.Translator.ModelContext.IProjectModelContext" />
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.ProjectContextFlags.PartialContext">
      <summary>
        Defines that the context is only partial build
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.ProjectContextFlags.FullContext">
      <summary>
        Defines that the context is complete
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.ProjectContextFlags.LinkedContext">
      <summary>
        Defines that the context components are completely interlinked
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.ProjectContextFlags.TranslatableContext">
      <summary>
        Defines that the context can be used for job translations
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IProjectModelContext">
      <summary>
        Represents a full project data context that contains all data described within the model managers
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.ContextFlags">
      <summary>
        Get the currently set <see cref="T:Mocassin.Model.Translator.ModelContext.ProjectContextFlags" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.IsLinkable">
      <summary>
        Get a boolean value if the context is rdy for component interlinking
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.IsTranslatable">
      <summary>
        Get boolean value if the context can be used for job translations
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.ModelProject">
      <summary>
        Access to the project services the model context was generated from
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.StructureModelContext">
      <summary>
        The structure model context of the linked project
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.TransitionModelContext">
      <summary>
        The transition model context of the linked project
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.EnergyModelContext">
      <summary>
        The energy model context of the linked project
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IProjectModelContext.SimulationModelContext">
      <summary>
        The simulation model context of the linked project
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ProjectModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.ContextFlags">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.IsLinkable">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.IsTranslatable">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.ModelProject">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.StructureModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.TransitionModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.EnergyModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ProjectModelContext.SimulationModelContext">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ISimulationModelContextBuilder">
      <summary>
        Simulation model context builder. Extends simulation reference information of a project into a full data context
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ISimulationModelContextBuilder.MetropolisSimulationModelBuilder">
      <summary>
        Get or set the builder instance for metropolis simulation models
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ISimulationModelContextBuilder.KineticSimulationModelBuilder">
      <summary>
        Get or set the builder instance for kinetic simulation models
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.ISimulationModelContextBuilder" />
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.MetropolisSimulationModelBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.KineticSimulationModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.CheckBuildRequirements">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.BuildLinkDependentComponents">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.PopulateContext(Mocassin.Model.Translator.ModelContext.ISimulationModelContext)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.GetEmptyDefaultContext">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContextBuilder.SetNullBuildersToDefault">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ISimulationModelContext">
      <summary>
        Represents a simulation model context that holds the relationship between simulations and affiliated model
        information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModelContext.KineticSimulationModels">
      <summary>
        The list of kinetic simulation models that exist in the project context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModelContext.MetropolisSimulationModels">
      <summary>
        The list of metropolis simulation models that exist in the project context
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ISimulationModelContext.FindSimulationModel(Mocassin.Model.Simulations.ISimulation)">
      <summary>
        Finds the simulation model that belongs to the passed simulation
      </summary>
      <param name="simulation"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModelContext.KineticSimulationModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModelContext.MetropolisSimulationModels">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelContext.FindSimulationModel(Mocassin.Model.Simulations.ISimulation)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MobilityType">
      <summary>
        Mobility type enum that encodes different kinds of possible mobility behaviors
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.MobilityType.Immobile">
      <summary>
        The particle is immobile
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.MobilityType.Mobile">
      <summary>
        The particle is mobile
      </summary>
    </member>
    <member name="F:Mocassin.Model.Translator.ModelContext.MobilityType.Selectable">
      <summary>
        The particle is mobile and can be selected
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel">
      <summary>
        Simulation encoding model for the simulation that contains mappings and encoding objects required by the simulator
        application
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.TransitionModelToJumpCollectionId">
      <summary>
        Dictionary that maps the transition models of the simulation model onto the simulation jump collection index
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.TransitionMappingToJumpDirectionId">
      <summary>
        Dictionary that maps the transition mapping models of the simulation model onto the simulation jump direction index
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.TransitionRuleToElectricFieldFactors">
      <summary>
        Dictionary that maps the transition rule models onto their affiliated rule-related electric field factor values
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.PositionIndexToMobilityTypesSet">
      <summary>
        List that maps the position index to a mobility type set that contains the kind of mobility for each particle
        index
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.TransitionMappingToElectricFieldFactors">
      <summary>
        Dictionary that maps the transition mapping models onto their affiliated direction-related electric field factor
        values in [eV m / V]
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.JumpCountMappingTable">
      <summary>
        The jump count table that assigns each position id + particle id combination the number of selectable jumps
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel.JumpDirectionIdMappingTable">
      <summary>
        The jump index assign table that assigns each position id + particle id + local direction id its valid jump
        direction id
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.TransitionModelToJumpCollectionId">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.TransitionMappingToJumpDirectionId">
      <inheritdoc />
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.TransitionRuleToElectricFieldFactors">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.PositionIndexToMobilityTypesSet">
      <inheritdoc />
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.TransitionMappingToElectricFieldFactors">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.JumpCountMappingTable">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationEncodingModel.JumpDirectionIdMappingTable">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ILocalJumpModel">
      <summary>
        Fully describes the behaviour of a transition mapping model in the context of a simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ILocalJumpModel.RuleModelBase">
      <summary>
        Get the basic unspecified rule model that the jump model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ILocalJumpModel.MappingModelBase">
      <summary>
        Get the basic unspecified mapping model that the jump model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ILocalJumpModel.ElectricFieldRuleInfluence">
      <summary>
        The electric field influence factor that is bound to the transition rule on simulation database creation
      </summary>
      <remarks> Describes the direction of the charge movement as a factor [-1;0;1] </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ILocalJumpModel.ElectricFieldMappingFactor">
      <summary>
        The electric field influence factor that is bound to the transition mapping on simulation database creation
      </summary>
      <remarks>
        Describes the potential energy gain in the electric field a [eV * m / V] if charge is transported in the positive
        rule and field direction
      </remarks>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ILocalJumpModel.GetMobilityType(System.Int32,System.Int32)">
      <summary>
        Get the mobility type that the local jump will produce for the passed position id + particle id combination
      </summary>
      <param name="positionId"></param>
      <param name="particleId"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel">
      <summary>
        Fully describes the behaviour of a transition mapping model in the context of a kinetic simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel.MappingModel">
      <summary>
        The kinetic mapping model that describes the geometry of the local jump model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel.RuleModel">
      <summary>
        The kinetic rule model that is valid for the jump model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel.NormalizedElectricFieldInfluence">
      <summary>
        Defines the electric normalized influence the jump model sees during simulation
      </summary>
      <remarks>
        Is defined in [eV m / V] in field direction, so multiplication with the field magnitude yields the field
        influence
      </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel.ChargeTransportVector">
      <summary>
        The cartesian charge transport vector of the local jump model that describes [charge*movement] in units of [C*Ang]
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.MappingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.RuleModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.NormalizedElectricFieldInfluence">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.RuleModelBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.MappingModelBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.ElectricFieldRuleInfluence">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.ElectricFieldMappingFactor">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.ChargeTransportVector">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.GetMobilityType(System.Int32,System.Int32)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticLocalJumpModel.Equals(Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisLocalJumpModel">
      <summary>
        Fully describes the behaviour of a transition mapping model in the context of a metropolis simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisLocalJumpModel.MappingModel">
      <summary>
        The metropolis mapping model that describes the geometry of the local jump model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisLocalJumpModel.RuleModel">
      <summary>
        The metropolis rule model that is valid for the jump model
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisLocalJumpModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.MappingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.RuleModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.RuleModelBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.MappingModelBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.ElectricFieldRuleInfluence">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.ElectricFieldMappingFactor">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.Equals(Mocassin.Model.Translator.ModelContext.IMetropolisLocalJumpModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisLocalJumpModel.GetMobilityType(System.Int32,System.Int32)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase">
      <summary>
        Base class for the simulation model builder that supplies shared generic simulation model build functionality
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.CreateMappingAssignMatrix``2(System.Collections.Generic.IEnumerable{``1})">
      <summary>
        Creates the mapping assign matrix for the passed set of transition models using the set generic type
        specializations
      </summary>
      <param name="transitionModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.InsertMappingModelsIntoRawMatrix``1(System.Collections.Generic.IList{System.Collections.Generic.IList{System.Collections.Generic.IList{``0}}},System.Collections.Generic.IList{``0},Mocassin.Model.Particles.IParticle)">
      <summary>
        Inserts the passed list of mapping models into the list based raw mapping matrix
      </summary>
      <param name="rawMatrix"></param>
      <param name="mappingModels"></param>
      <param name="particle"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.ConvertRawAssignListsToMatrix``1(System.Collections.Generic.IList{System.Collections.Generic.IList{System.Collections.Generic.IList{``0}}})">
      <summary>
        Converts the raw list based mapping assign matrix into a fixed size 3D array and fills the placeholder spots with
        an invalid null mapping
      </summary>
      <param name="rawMatrix"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetMappingAssignMatrixLengths``1(System.Collections.Generic.IList{System.Collections.Generic.IList{System.Collections.Generic.IList{``0}}})">
      <summary>
        Get the required size information in three dimensions for the mapping model assign matrix
      </summary>
      <param name="rawMatrix"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetTransitionMappingIndexing(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ITransitionModel})">
      <summary>
        Creates the indexing dictionary for the mapping models of the passed transition model sequence
      </summary>
      <param name="transitionModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetTransitionModelIndexing(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ITransitionModel})">
      <summary>
        Creates the indexing dictionary for the passed sequence of kinetic transition models
      </summary>
      <param name="transitionModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetJumpCountTable``2(``0[0:,0:,0:],System.Collections.Generic.IList{``1})">
      <summary>
        Translates a 3D transition mapping assign matrix into the 2D jump count table and checks if position id + particle
        id without jumps have a passive involvement in jumps
      </summary>
      <param name="mappingAssignMatrix"></param>
      <param name="jumpModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.AddJumpIndexAssignTable``1(Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel,``0[0:,0:,0:])">
      <summary>
        Creates the jump index assign table on the passed kinetic indexing model using the provided kinetic mapping assign
        matrix
      </summary>
      <param name="encodingModel"></param>
      <param name="mappingAssignMatrix"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.AddElectricFieldInfluenceMappings(Mocassin.Model.Translator.ModelContext.ISimulationEncodingModel,System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ILocalJumpModel})">
      <summary>
        Adds the filed influence mappings from the passed set of local jump models to the simulation encoding model
      </summary>
      <param name="encodingModel"></param>
      <param name="jumpModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetUniqueDirectionFieldFactors(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ILocalJumpModel})">
      <summary>
        Filters the passed set of local jump models for the unique jump direction field influences and returns them as a
        dictionary
      </summary>
      <param name="jumpModels"></param>
      <returns></returns>
      <remarks>
        Ensures that the model context building system did not produce any inconsistent jump field influence
        information
      </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetUniqueRuleFieldFactors(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ILocalJumpModel})">
      <summary>
        Filters the passed set of local jump models for the unique jump rule field influences and returns them as a
        dictionary
      </summary>
      <param name="jumpModels"></param>
      <returns></returns>
      <remarks>
        Ensures that the model context building system did not produce any inconsistent jump field influence
        information
      </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.SimulationModelBuilderBase.GetPositionIndexToMobilitySetMapping(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ILocalJumpModel})">
      <summary>
        Creates the mapping list that assigns each possible position index its set of mobility information
      </summary>
      <param name="jumpModels"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ISimulationModel">
      <summary>
        Represents an unspecified simulation model that holds the relationship information between the basic model context
        information and a simulation definition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModel.MaxAttemptFrequency">
      <summary>
        Get or set the maximum attempt frequency for the simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModel.NormalizedElectricFieldVector">
      <summary>
        Get or set the cartesian normalized electric field vector. Describes [1 V/m] field strength
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModel.SimulationEncodingModel">
      <summary>
        Get the simulation encoding model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationModel.SimulationTrackingModel">
      <summary>
        The movement tracking model that describes how particle transition combinations are tracked
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ISimulationModel.GetTransitionModels">
      <summary>
        Get the transition models of the simulation model
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ISimulationModel.GetLocalJumpModels">
      <summary>
        Get the local jump models of the simulation model
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ISimulationModel.GetMobileParticles">
      <summary>
        Get the particle set that contains all particles that can potentially move within the simulation
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationModel">
      <summary>
        Abstract base class for implementations of simulation models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModel.MaxAttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModel.NormalizedElectricFieldVector">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModel.SimulationEncodingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationModel.SimulationTrackingModel">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModel.GetTransitionModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModel.GetLocalJumpModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationModel.GetMobileParticles">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModelBuilder">
      <summary>
        Kinetic simulation model builder. Extends kinetic simulation reference objects into a full data context
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IKineticSimulationModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Simulations.IKineticSimulation})">
      <summary>
        Creates the list of kinetic simulation models for the passed set of kinetic simulation objects
      </summary>
      <param name="kineticSimulations"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IKineticSimulationModelBuilder.BuildLinkingDependentComponents(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.IKineticSimulationModel})">
      <summary>
        Builds the components on the kinetic simulation models that require completed linking
      </summary>
      <param name="simulationModels"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Simulations.IKineticSimulation})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.BuildLinkingDependentComponents(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.IKineticSimulationModel})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddEncodingModel(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Creates and adds the kinetic indexing model for the passed and fully created simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.BuildSimulationModel(Mocassin.Model.Simulations.IKineticSimulation)">
      <summary>
        Builds a single kinetic simulation model for the passed kinetic simulation
      </summary>
      <param name="simulation"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddAttemptFrequencyInformation(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Determines and adds the attempt frequency information to the passed kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.IndexTrackerModels(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel,System.ValueTuple{System.Int32,System.Int32}@)">
      <summary>
        Indexes the passed simulation model using the passed indexing set reference
      </summary>
      <param name="simulationModel"></param>
      <param name="indexing"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddTrackingModelMappingTables(Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel)">
      <summary>
        Creates and adds the tracking model mapping tables to the passed kinetic tracking model
      </summary>
      <param name="trackingModel"></param>
      <remarks> For a valid mapping to be created the indexing of the tracking model has to be final </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateStaticTrackerMappingTable(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel})">
      <summary>
        Creates a 2D index mapping table that assigns each positionId/particleId combination its basic static movement
        tracker index for the simulation
      </summary>
      <param name="trackerModels"></param>
      <returns></returns>
      <remarks> Assigns each combination that does not support tracking the value -1 </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateGlobalTrackerMappingTable(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IGlobalTrackerModel})">
      <summary>
        Creates a 2D index mapping table that assigns each transitionId/particleId its global tracker index for the
        simulation
      </summary>
      <param name="trackerModels"></param>
      <returns></returns>
      <remarks> Assigns each combination that does not support tracking the value -1 </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddNormalizedElectricFieldVector(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Calculates and adds the normalized cartesian electric field vector to the passed kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddLocalJumpModels(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Creates and adds the list of kinetic local simulation models to the passed kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateLocalJumpModel(Mocassin.Model.Translator.ModelContext.IKineticMappingModel,Mocassin.Model.Translator.ModelContext.IKineticRuleModel,Mocassin.Model.Translator.ModelContext.IKineticSimulationModel,System.Int32@)">
      <summary>
        Creates the local jump model for the provided combination of kinetic rule model and mapping model in the context of
        the defined kinetic simulation model
      </summary>
      <param name="mappingModel"></param>
      <param name="ruleModel"></param>
      <param name="simulationModel"></param>
      <param name="modelId"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddElectricFieldInfluenceFactors(Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel,Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Determines the electric influence factor of a
        <see cref="T:Mocassin.Model.Translator.ModelContext.IKineticLocalJumpModel" /> in the context of the passed
        <see cref="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel" />
      </summary>
      <param name="jumpModel"></param>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.GetChargeTransportVector(Mocassin.Model.Translator.ModelContext.IKineticMappingModel,Mocassin.Model.Translator.ModelContext.IKineticRuleModel)">
      <summary>
        Get the charge transport vector [charge*movement] for the passed combination of kinetic mapping model and kinetic
        rule model in [eV * m / V]
      </summary>
      <param name="mappingModel"></param>
      <param name="ruleModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.GetNormalizedElectricInfluence(Mocassin.Mathematics.ValueTypes.Cartesian3D@,Mocassin.Mathematics.ValueTypes.Cartesian3D@)">
      <summary>
        Get the normalized electric field influence that results from a charge transport vector and the normalized
        electric field vector
      </summary>
      <param name="chargeTransportVector"></param>
      <param name="normalizedFieldVector"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.AddKineticTrackingModel(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Builds and adds the kinetic tracking model for the passed simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateStaticMovementTrackerModels(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Creates the list of static tracker models for a kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
      <remarks> Requires finished linking of the passed simulation </remarks>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateRequiredStaticTrackerModels(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Creates the required static movement trackers that result from a single kinetic transition model (Duplicates are
        removed)
      </summary>
      <param name="transitionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateStaticTrackerByStepIndex(Mocassin.Model.Translator.ModelContext.IKineticMappingModel,Mocassin.Model.Translator.ModelContext.IKineticRuleModel,System.Int32)">
      <summary>
        Creates the static movement tracker for a specific transition step of a kinetic mapping model/rule model
        combination
      </summary>
      <param name="mappingModel"></param>
      <param name="ruleModel"></param>
      <param name="stepIndex"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateGlobalTrackerModels(Mocassin.Model.Translator.ModelContext.IKineticSimulationModel)">
      <summary>
        Creates the list of raw global tracker models for a kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
      <remarks> Requires finished linking of the passed simulation </remarks>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModelBuilder.CreateGlobalTrackerModel(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel,Mocassin.Model.Particles.IParticle)">
      <summary>
        Creates a new probability tracker model for the passed combination of transition model and tracked particle
      </summary>
      <param name="transitionModel"></param>
      <param name="trackedParticle"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel">
      <summary>
        Represents a kinetic simulation model that holds the relationship information between transitions and simulation
        definitions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel.Simulation">
      <summary>
        The kinetic simulation this model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel.TransitionModels">
      <summary>
        The list of transition models that are valid in this simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel.MappingAssignMatrix">
      <summary>
        Kinetic mapping assign matrix that assigns each position index/particle index combination its valid kinetic mapping
        models
      </summary>
      <remarks> Order on C side is [PositionId,ParticleId,ObjId] </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel.LocalJumpModels">
      <summary>
        The list of all existing jump models in the kinetic simulation model that finalized the actual transition behaviour
        in the simulation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticSimulationModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.Simulation">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.MaxAttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.NormalizedElectricFieldVector">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticSimulationModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.TransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.MappingAssignMatrix">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.LocalJumpModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.GetTransitionModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticSimulationModel.GetLocalJumpModels">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModelBuilder">
      <summary>
        Builder for metropolis simulation models. Extends reference metropolis data of the project into a full data context
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Simulations.IMetropolisSimulation})">
      <summary>
        Builds the metropolis simulation models for the passed sequence of metropolis simulations
      </summary>
      <param name="metropolisSimulations"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModelBuilder.BuildLinkingDependentComponents(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel})">
      <summary>
        Builds the components on the metropolis simulation models that require completed linking
      </summary>
      <param name="simulationModels"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Simulations.IMetropolisSimulation})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.BuildLinkingDependentComponents(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.AddEncodingModel(Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel)">
      <summary>
        Creates and adds the kinetic indexing model for the passed and fully created simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.CreateTransitionModelPlaceholders(System.Collections.Generic.IEnumerable{Mocassin.Model.Transitions.IMetropolisTransition})">
      <summary>
        Takes a sequence of metropolis transitions and creates placeholder transition models for the later linking process
      </summary>
      <param name="transitions"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.AddLocalJumpModels(Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel)">
      <summary>
        Creates and adds the list of metropolis local simulation models to the passed kinetic simulation model
      </summary>
      <param name="simulationModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.CreateLocalJumpModel(Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel,Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel,Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel,System.Int32@)">
      <summary>
        Creates the local jump model for the provided combination of metropolis rule model and mapping model in the context
        of the defined metropolis simulation model
      </summary>
      <param name="mappingModel"></param>
      <param name="ruleModel"></param>
      <param name="simulationModel"></param>
      <param name="modelId"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModelBuilder.GetMaxJumpOptionsCount(Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel)">
      <summary>
        Determines the maximum count of jump model options on a single position in the passed metropolis simulation model
      </summary>
      <param name="simulationModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel">
      <summary>
        Represents a metropolis simulation model that holds the relationship information between transitions and simulation
        definitions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel.Simulation">
      <summary>
        The metropolis simulation this model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel.TransitionModels">
      <summary>
        The list of transition models that are valid in this simulation model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel.MappingAssignMatrix">
      <summary>
        Metropolis mapping assign matrix that assigns each position index/particle index combination its valid mapping
        models
      </summary>
      <remarks> Order on C side is [PositionId,ParticleId,ObjId] </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel.LocalJumpModels">
      <summary>
        The list of all existing jump models in the metropolis simulation model that finalized the actual transition
        behaviour in the simulation
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisSimulationModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.Simulation">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.TransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.MappingAssignMatrix">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.LocalJumpModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.MaxAttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.NormalizedElectricFieldVector">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.#ctor">
      <summary>
        Create new metropolis simulation model with empty tracking model
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.GetTransitionModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisSimulationModel.GetLocalJumpModels">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.GlobalTrackerModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GlobalTrackerModel.ModelId">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GlobalTrackerModel.KineticTransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GlobalTrackerModel.TrackedParticle">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IGlobalTrackerModel">
      <summary>
        Represents a global tracker model for kinetic simulations that defines a
        <see cref="T:Mocassin.Model.Particles.IParticle" /> and
        <see cref="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel" /> combination that is tracked by the simulator
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGlobalTrackerModel.KineticTransitionModel">
      <summary>
        The kinetic transition model the tracker belongs to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGlobalTrackerModel.TrackedParticle">
      <summary>
        The particle that is tracked by the model
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMovementTrackerModel">
      <summary>
        Represents a movement tracker model that describes and indexes a tracked physical movement property of the
        simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMovementTrackerModel.TrackedParticle">
      <summary>
        The particle that is tracked by this tracker model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMovementTrackerModel.KineticTransitionModel">
      <summary>
        The kinetic transition model that belongs to this tracker model
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MovementTrackerModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MovementTrackerModel.ModelId">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MovementTrackerModel.TrackedParticle">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MovementTrackerModel.KineticTransitionModel">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel">
      <summary>
        Represents a kinetic simulation tracking model that describes tracking requirements for the simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.SimulationModel">
      <summary>
        The simulation model this tracking model is valid for
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.StaticTrackerModels">
      <summary>
        The list of static movement tracker models required for the simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.GlobalTrackerModels">
      <summary>
        The list of jump probability tracker models for the simulation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.StaticTrackerMappingTable">
      <summary>
        2D Matrix that assigns each position index/particle index a static tracker index
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.GlobalTrackerMappingTable">
      <summary>
        2D Matrix that assigns each transition index/particle index combination a global tracker index (for global movement
        and probability tracking)
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.GlobalTrackerCount">
      <summary>
        The number of required global tracker entries
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ISimulationTrackingModel.StaticTrackerCount">
      <summary>
        The number of required static trackers per unit cell
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.SimulationModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.StaticTrackerModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.GlobalTrackerModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.StaticTrackerMappingTable">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.GlobalTrackerMappingTable">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.GlobalTrackerCount">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.StaticTrackerCount">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.SimulationTrackingModel.GetEmpty">
      <summary>
        Get an empty simulation tracking model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel">
      <summary>
        Static movement tracker model that extends the movement tracker model by position information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel.TrackedParticleIndex">
      <summary>
        The index of the tracked particle
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel.TrackedPositionIndex">
      <summary>
        The index P in the 4D encoded system (0,0,0,P) of the tracked position set
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel.TrackedParticleIndex">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel.TrackedPositionIndex">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel.Equals(Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel.CompareTo(Mocassin.Model.Translator.ModelContext.IStaticMovementTrackerModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.StaticMovementTrackerModel.GetHashCode">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IStructureModelContextBuilder">
      <summary>
        Structure model context builder. Extends structural reference information of a project into a full data context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContextBuilder.EnvironmentModelBuilder">
      <summary>
        The environment model builder that is used by the context builder
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContextBuilder.PositionModelBuilder">
      <summary>
        The position model builder that is used by the context
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContextBuilder.InteractionRangeModelBuilder">
      <summary>
        The interaction range model builder that is used by the context
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IStructureModelContextBuilder" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.EnvironmentModelBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.PositionModelBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.InteractionRangeModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.CheckBuildRequirements">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.PopulateContext(Mocassin.Model.Translator.ModelContext.IStructureModelContext)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.GetEmptyDefaultContext">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.StructureModelContextBuilder.SetNullBuildersToDefault">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IStructureModelContext">
      <summary>
        Represents the model data context for structural information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContext.PositionModels">
      <summary>
        Describes the position models for a single unit cell with extended wyckoff positions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContext.EnvironmentModels">
      <summary>
        The list of existing environment models. Each for one unit cell position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IStructureModelContext.InteractionRangeModel">
      <summary>
        The range model that defines the interaction cutoff
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.StructureModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContext.PositionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContext.EnvironmentModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.StructureModelContext.InteractionRangeModel">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IEnvironmentModelBuilder" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.PositionPairInteractions">
      <summary>
        Get or set the position pair interaction dictionary
        that assigns each unit cell position its existing pair interactions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.PositionGroupInteractions">
      <summary>
        Get or set the position group interaction dictionary
        that assigns each unit cell position its existing group interactions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.PositionGroupInfos">
      <summary>
        The position group infos for all existing group interactions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.VectorEncoder">
      <summary>
        The unit cell vector encoder to transform cell vectors
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Structures.ICellSite})">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.LoadBuildDataFromProject">
      <summary>
        Loads the required shared build data from the reference project managers
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.BuildEnvironmentModel(Mocassin.Model.Structures.ICellSite)">
      <summary>
        Builds a single environment model
      </summary>
      <param name="cellSite"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.AddPairInteractionModels(Mocassin.Model.Translator.ModelContext.IEnvironmentModel)">
      <summary>
        Creates and adds all existing pair interaction models to the environment model
      </summary>
      <param name="environmentModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.CreatePairInteractionModel(Mocassin.Model.Energies.IPairInteraction,Mocassin.Model.Translator.ModelContext.IEnvironmentModel)">
      <summary>
        Creates a single pair interaction model from the passed interaction and the environment model it belongs to
      </summary>
      <param name="pairInteraction"></param>
      <param name="environmentModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.SetInteractionData(Mocassin.Model.Translator.ModelContext.IPairInteractionModel,Mocassin.Model.Energies.IPairInteraction)">
      <summary>
        Sets the pair interaction model info in normal forward cases from the passed pair interaction
      </summary>
      <param name="pairModel"></param>
      <param name="pairInteraction"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.SetInteractionDataAsInverted(Mocassin.Model.Translator.ModelContext.IPairInteractionModel,Mocassin.Model.Energies.IPairInteraction)">
      <summary>
        Sets the pair interaction model info in inverted cases where the interaction was created from the target cell
        position
      </summary>
      <param name="pairModel"></param>
      <param name="pairInteraction"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.ExtendPairInteractionModel(Mocassin.Model.Translator.ModelContext.IPairInteractionModel,System.Collections.Generic.IList{Mocassin.Symmetry.SpaceGroups.ISymmetryOperation})">
      <summary>
        Takes a single reference pair interaction model an creates the extended set of all equivalent interaction models
        including the original using the provided multiplicity operations
      </summary>
      <param name="pairInteractionModel"></param>
      <param name="multiplicityOperations"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.CreateEquivalentModelByVector(Mocassin.Model.Translator.ModelContext.IPairInteractionModel,Mocassin.Mathematics.ValueTypes.Fractional3D@)">
      <summary>
        Creates a new pair interaction model from an original pair interaction model and a new absolute 3D target vector
      </summary>
      <param name="originalModel"></param>
      <param name="absoluteVector"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.AddGroupInteractionModels(Mocassin.Model.Translator.ModelContext.IEnvironmentModel)">
      <summary>
        Creates and adds all existing group interaction models to the environment model
      </summary>
      <param name="environmentModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.CreateGroupInteractionModel(Mocassin.Model.Energies.IGroupInteraction,Mocassin.Model.Translator.ModelContext.IEnvironmentModel)">
      <summary>
        Creates a group interaction model for the passed group interaction that is linked to its parent environment model
      </summary>
      <param name="groupInteraction"></param>
      <param name="environmentModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.ExtendGroupInteractionModel(Mocassin.Model.Translator.ModelContext.IGroupInteractionModel)">
      <summary>
        Extend the passed group interaction model into its set of symmetry equivalents and looks up the required pair
        interaction information
      </summary>
      <param name="groupModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.CreateExtendedGroupModel(Mocassin.Model.Translator.ModelContext.IGroupInteractionModel,System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IPairInteractionModel})">
      <summary>
        Creates an extended group interaction model from the original model and the passed list of pair interaction models
      </summary>
      <param name="originalModel"></param>
      <param name="pairModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.EnvironmentModelBuilder.CreatePairIndexCoding(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IPairInteractionModel})">
      <summary>
        Creates a pair index coding for a group interaction model
      </summary>
      <param name="pairModels"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IEnvironmentModelBuilder">
      <summary>
        Builder for environment models that fully describe the surroundings of a simulation position
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IEnvironmentModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Structures.ICellSite})">
      <summary>
        Builds the environment model for each passed unit cell position
      </summary>
      <param name="cellReferencePositions"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.EnvironmentModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IEnvironmentModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModel.CellSite">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModel.PairInteractionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModel.GroupInteractionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.EnvironmentModel.TransformOperations">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IEnvironmentModel">
      <summary>
        Represents an environment model that fully describes the surroundings and dependencies of a unit cell position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnvironmentModel.CellSite">
      <summary>
        The unit cell position that the environment is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnvironmentModel.PairInteractionModels">
      <summary>
        The list of pair interaction models that belong to the environment
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnvironmentModel.GroupInteractionModels">
      <summary>
        The list of group interaction models that belong to the environment
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IEnvironmentModel.TransformOperations">
      <summary>
        Wyckoff operation dictionary that contains all transform operations that reach equivalent center positions
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.GroupInteractionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.EquivalentModelCount">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.PairInteractionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.EquivalentModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.EnvironmentModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.GroupEnergyModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.PositionGroupInfo">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.GroupInteractionModel.PairIndexCoding">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel">
      <summary>
        Represents a group interaction model that combines group energy model with geometric information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.EquivalentModelCount">
      <summary>
        Get the number of equivalent group interactions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.PairInteractionModels">
      <summary>
        The list of pair interaction models that form the geometry of the group
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.EquivalentModels">
      <summary>
        The list of group interaction models that are symmetry equivalent to this one
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.EnvironmentModel">
      <summary>
        The environment model the group interaction belongs to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.GroupEnergyModel">
      <summary>
        The group energy model that the interaction uses
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.PositionGroupInfo">
      <summary>
        The position group info that carries extended symmetry info for the group interaction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IGroupInteractionModel.PairIndexCoding">
      <summary>
        The pair index coding array for the simulation. Describes the cluster through pair interaction ids
      </summary>
      <remarks> Length has to be 8, value of -1 marks end of entries </remarks>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IInteractionRangeModelBuilder">
      <summary>
        Builder for the interaction range model of the structure model context
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IInteractionRangeModelBuilder.BuildModel(Mocassin.Model.ModelProject.IModelProject)">
      <summary>
        Builds the interaction range model for the passed model project
      </summary>
      <param name="modelProject"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.InteractionRangeModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.InteractionRangeModelBuilder.BuildModel(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.InteractionRangeModelBuilder.GetInteractionDistance(Mocassin.Model.ModelProject.IModelProject)">
      <summary>
        Get the interaction range defined in the model project
      </summary>
      <param name="modelProject"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.InteractionRangeModelBuilder.AddInteractionCubeInformation(Mocassin.Model.Translator.ModelContext.IInteractionRangeModel,Mocassin.Model.ModelProject.IModelProject)">
      <summary>
        Adds the interaction cube information to the passed range model
      </summary>
      <param name="rangeModel"></param>
      <param name="modelProject"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IInteractionRangeModel">
      <summary>
        Range model that describes the interaction range of regular positions
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IInteractionRangeModel.InteractionRange">
      <summary>
        The interaction range in internal units
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IInteractionRangeModel.CellsInDirectionA">
      <summary>
        The interaction range in cells (rounded up) in the A direction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IInteractionRangeModel.CellsInDirectionB">
      <summary>
        The interaction range in cells (rounded up) in the A direction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IInteractionRangeModel.CellsInDirectionC">
      <summary>
        The interaction range in cells (rounded up) in the A direction
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.InteractionRangeModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.InteractionRangeModel.InteractionRange">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.InteractionRangeModel.CellsInDirectionA">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.InteractionRangeModel.CellsInDirectionB">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.InteractionRangeModel.CellsInDirectionC">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPairInteractionModel">
      <summary>
        Represents a pair interaction model that combines geometry information with pair energy model information
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairInteractionModel.EquivalentModelCount">
      <summary>
        Get the number of equivalent interaction models that exist
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairInteractionModel.PairEnergyModel">
      <summary>
        The pair energy model that belongs to the interaction
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairInteractionModel.EnvironmentModel">
      <summary>
        The environment model the interaction is assigned to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairInteractionModel.EquivalentModels">
      <summary>
        The list of equivalent pair interaction models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPairInteractionModel.TargetPositionInfo">
      <summary>
        The target position information
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PairInteractionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPairInteractionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairInteractionModel.EquivalentModelCount">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairInteractionModel.PairEnergyModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairInteractionModel.EnvironmentModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairInteractionModel.EquivalentModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PairInteractionModel.TargetPositionInfo">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPositionModelBuilder">
      <summary>
        Builder for position models that fully described an extended position environment and properties
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IPositionModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IEnvironmentModel})">
      <summary>
        Creates all position models for the passed set of environment models
      </summary>
      <param name="environmentModels"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PositionModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPositionModelBuilder" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.VectorEncoder">
      <summary>
        The vector encoder for vector transformation
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IEnvironmentModel})">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.LoadBuildDataFromProject">
      <summary>
        Loads all required reference build data from the current project
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.IndexAndSortPositionModels(System.Collections.Generic.List{Mocassin.Model.Translator.ModelContext.IPositionModel})">
      <summary>
        Synchronizes the <see cref="T:Mocassin.Model.Translator.ModelContext.IPositionModel" /> list indexing and sorting with the extended wyckoff position list
      </summary>
      <param name="positionModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.CreatePositionModels(Mocassin.Model.Translator.ModelContext.IEnvironmentModel)">
      <summary>
        Creates the set of position models that results from the passed environment model and the space group of the
        project
      </summary>
      <param name="environmentModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.CreatePositionModel(Mocassin.Model.Translator.ModelContext.IEnvironmentModel,Mocassin.Symmetry.SpaceGroups.ISymmetryOperation,System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.ITargetPositionInfo})">
      <summary>
        Creates a position model from the passed environment model, pair interaction target info
        and transform symmetry operation
      </summary>
      <param name="environmentModel"></param>
      <param name="operation"></param>
      <param name="targetInfos"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.TransformTargetInfos(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.ITargetPositionInfo},Mocassin.Symmetry.SpaceGroups.ISymmetryOperation,Mocassin.Mathematics.ValueTypes.Fractional3D@)">
      <summary>
        Transforms the passed list of target infos to a new center using the provided symmetry operation
      </summary>
      <param name="targetInfos"></param>
      <param name="operation"></param>
      <param name="centerVector"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.PositionModelBuilder.CreateNewTargetInfoList(System.Int32)">
      <summary>
        Creates a new <see cref="T:Mocassin.Model.Translator.ModelContext.ITargetPositionInfo" /> list that ensures the correct sorting
      </summary>
      <param name="capacity"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPositionModel">
      <summary>
        Describes the full model information for a single extended wyckoff position in the unit cell
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.CellSite">
      <summary>
        The unit cell position that is valid on this position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.CenterVector">
      <summary>
        The actual center vector of the position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.EnvironmentModel">
      <summary>
        The environment model that belongs to the position model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.PositionTransitionModel">
      <summary>
        The position transition model that belongs to this position model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.TransformOperation">
      <summary>
        The transform operation that was used to transform the surrounding from the original unit cell position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionModel.TargetPositionInfos">
      <summary>
        The list of transformed target position infos of the environment in order of its pair interactions
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PositionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPositionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.CellSite">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.CenterVector">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.EnvironmentModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.PositionTransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.TransformOperation">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionModel.TargetPositionInfos">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITransitionModelContextBuilder">
      <summary>
        Transition model context builder. Extends transition reference information of a project into a full data context
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContextBuilder.MetropolisTransitionModelBuilder">
      <summary>
        The model builder for the metropolis transition model collection
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContextBuilder.KineticTransitionModelBuilder">
      <summary>
        The model builder for the kinetic transition model collection
      </summary>
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContextBuilder.PositionTransitionModelBuilder">
      <summary>
        The model builder for the position transition model collection
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.ITransitionModelContextBuilder" />
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.MetropolisTransitionModelBuilder">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.KineticTransitionModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.PositionTransitionModelBuilder">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.#ctor(Mocassin.Model.Translator.ModelContext.IProjectModelContextBuilder)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.CheckBuildRequirements">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.PopulateContext(Mocassin.Model.Translator.ModelContext.ITransitionModelContext)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.GetEmptyDefaultContext">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModelContextBuilder.SetNullBuildersToDefault">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITransitionModelContext">
      <summary>
        Represents a transition model context that describes all existing transition models for a project
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContext.KineticTransitionModels">
      <summary>
        The list of existing kinetic transition models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContext.MetropolisTransitionModels">
      <summary>
        THe list of existing metropolis transition models
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionModelContext.PositionTransitionModels">
      <summary>
        The list of existing position transition models
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TransitionModelContext">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContext.KineticTransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContext.MetropolisTransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModelContext.PositionTransitionModels">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel">
      <summary>
        Represents a transition mapping model without specializing the type of describe transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.PathLength">
      <summary>
        Get the jump length of the mapping
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.InverseMappingBase">
      <summary>
        Get the inverse <see cref="T:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel" />
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.StartVector4D">
      <summary>
        Defines the start vector of the mapping in encoded 4D crystal coordinates
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.GetMovementSequence">
      <summary>
        Get the movement sequence of the transition mapping model
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.GetTransitionSequence">
      <summary>
        Get the transition sequence of the transition mapping model
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionMappingModel.GetTransitionModel">
      <summary>
        Get the transition model of the transition mapping model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticMappingModel">
      <summary>
        Represents a kinetic mapping model that fully describes a transitions geometric properties on a specific position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.TransitionModel">
      <summary>
        The kinetic transition model affiliated with the mapping model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.InverseIsSet">
      <summary>
        Flag that indicates if the inverse mapping is already set
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.Mapping">
      <summary>
        The kinetic mapping object the model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.InverseMapping">
      <summary>
        The inverse mapping model that describes the neutralizing transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.PositionSequence4D">
      <summary>
        The encoded 4D position sequence in absolute coordinates
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.PositionSequence3D">
      <summary>
        The fractional 3D position sequence in absolute coordinates
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.TransitionSequence4D">
      <summary>
        The encoded 4D transition sequence where each vector is relative to the start position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.TransitionSequence3D">
      <summary>
        The fractional 3D transition sequence where each vector is relative to the start position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.PositionMovementMatrix">
      <summary>
        The position movement matrix. Describes how each involved position moves on transition in fractional coordinates
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.LinkIfGeometricInversion(Mocassin.Model.Translator.ModelContext.IKineticMappingModel)">
      <summary>
        Links this model to the passed mapping model if it describes the inverse case. Returns false if no match
      </summary>
      <param name="inverseModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IKineticMappingModel.CreateGeometricInversion">
      <summary>
        Creates the geometric inversion of the mapping model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticMappingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.TransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.InverseIsSet">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.Mapping">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.InverseMapping">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.PositionSequence4D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.PositionSequence3D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.TransitionSequence4D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.TransitionSequence3D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.PositionMovementMatrix">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.PathLength">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.InverseMappingBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticMappingModel.StartVector4D">
      <inheritdoc />
      <remarks> This value cannot be set for a kinetic transition </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.LinkIfGeometricInversion(Mocassin.Model.Translator.ModelContext.IKineticMappingModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.CreateGeometricInversion">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetMovementSequence">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetTransitionSequence">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetTransitionModel">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetGeometricInversionTransitionSequence3D">
      <summary>
        Gets an inverted version of the fractional transition sequence
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetGeometricInversionTransitionSequence4D">
      <summary>
        Gets an inverted version of the encoded transition sequence
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticMappingModel.GetGeometricInversionMovementMatrix">
      <summary>
        Get an inverted version of the movement matrix
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel">
      <summary>
        Represents a metropolis mapping model that fully describes a transitions geometric properties on a specific
        position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.TransitionModel">
      <summary>
        The transition model this mapping model belongs to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.InverseIsSet">
      <summary>
        Boolean flag if the inverse mapping model is set
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.IsSourceInversion">
      <summary>
        Boolean flag that indicates if this mapping model describes an inversion of its source mapping
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.Mapping">
      <summary>
        The metropolis mapping object the model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.InverseMapping">
      <summary>
        The inverse mapping model that describes the neutralizing transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.StartVector3D">
      <summary>
        The fractional 3D coordinates of the start point in the origin unit cell
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.EndVector3D">
      <summary>
        The fractional 3D coordinates of the end point in the origin unit cell
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.EndVector4D">
      <summary>
        The encoded 4D coordinates of the end position (0,0,0,P) in the origin unit cell
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.CreateGeometricInversion">
      <summary>
        Create a new geometric inversion of this metropolis mapping model
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel.LinkIfGeometricInversion(Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel)">
      <summary>
        Links this and the passed mapping model together if they describe inverse mappings. Returns false if they do not
        match (Logical and geometric inversion is identical for MMC mappings)
      </summary>
      <param name="mappingModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.IsSourceInversion">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.Mapping">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.InverseMapping">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.StartVector3D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.EndVector3D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.PathLength">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.InverseMappingBase">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.StartVector4D">
      <inheritdoc />
      <remarks> Coordinates (0,0,0,P) are always in the original unit cell </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.EndVector4D">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.TransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.InverseIsSet">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.GetMovementSequence">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.GetTransitionSequence">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.GetTransitionModel">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.CreateGeometricInversion">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisMappingModel.LinkIfGeometricInversion(Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel)">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPositionTransitionModelBuilder">
      <summary>
        Builder for the transition position model that fully describes which transitions are possible on each unit cell
        position
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IPositionTransitionModelBuilder.BuildModels(Mocassin.Model.Translator.ModelContext.ITransitionModelContext,System.Threading.Tasks.Task)">
      <summary>
        Builds the list of all transition position models that are described within the passed transition model context
        and a task that completes when the transition model build is completed
      </summary>
      <param name="modelContext"></param>
      <param name="transitionBuildTask"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPositionTransitionModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder.BuildModels(Mocassin.Model.Translator.ModelContext.ITransitionModelContext,System.Threading.Tasks.Task)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder.CreatePositionTransitionModel(Mocassin.Model.Structures.ICellSite,Mocassin.Model.Translator.ModelContext.ITransitionModelContext)">
      <summary>
        Creates the position transition model for the passed transition model
      </summary>
      <param name="cellSite"></param>
      <param name="modelContext"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder.GetPossibleModels(Mocassin.Model.Structures.ICellSite,System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IKineticTransitionModel})">
      <summary>
        Searches a list of kinetic transition models for entries that are possible on the passed unit cell position
      </summary>
      <param name="cellSite"></param>
      <param name="transitionModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.PositionTransitionModelBuilder.GetPossibleModels(Mocassin.Model.Structures.ICellSite,System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel})">
      <summary>
        Searches a list of metropolis transition models for entries that are possible on the passed unit cell position
      </summary>
      <param name="cellSite"></param>
      <param name="transitionModels"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IPositionTransitionModel">
      <summary>
        Represents a position transition model that describes which transitions are possible on a unit cell position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionTransitionModel.CellSite">
      <summary>
        The unit cell position the position transition model belongs to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionTransitionModel.KineticTransitionModels">
      <summary>
        The list of possible kinetic transition models on this position
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IPositionTransitionModel.MetropolisTransitionModels">
      <summary>
        The list of possible metropolis transition models on this position
      </summary>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.PositionTransitionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IPositionTransitionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionTransitionModel.CellSite">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionTransitionModel.KineticTransitionModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.PositionTransitionModel.MetropolisTransitionModels">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel">
      <summary>
        Represents a transition rule model that describes the physics of the state manipulation of a specific transition
        path occupation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.InverseIsSet">
      <summary>
        Boolean flag if the inverse rule is already set
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.IsSourceInversion">
      <summary>
        Boolean flag that indicates that this rule model describes in inverted version
        of its source rule and abstract transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.AbstractTransition">
      <summary>
        The abstract transition the rule model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.SelectableParticle">
      <summary>
        The selectable particle the rule describes
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.AttemptFrequency">
      <summary>
        Get or the attempt frequency of the rule model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.StartState">
      <summary>
        The list of particles that describes the path occupation in the start state
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.FinalState">
      <summary>
        The list of particles that describes the path occupation in the final state
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.EndIndexingDeltas">
      <summary>
        The indexing description that describes the offset of particles in the end state compared to the start state
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.StartStateCode">
      <summary>
        Index encoded version of the start state occupation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.TransitionStateCode">
      <summary>
        Index encoded version of the transition state occupation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.FinalStateCode">
      <summary>
        Index encoded version of the final state occupation
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.FinalTrackerOrderCode">
      <summary>
        Index encoded final order of the involved dynamic trackers
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.CopyInversionDataToModel(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <summary>
        Copies the data on this rule model as inverted info onto the passed rule model
      </summary>
      <param name="ruleModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.LinkIfLogicalInversions(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <summary>
        Links this and the passed rule model together if they are a logic inversion match
      </summary>
      <param name="ruleModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.IsLogicalInverse(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <summary>
        Checks if the passed rule model is the logical inverse (not geometric) of the passed rule model
      </summary>
      <param name="ruleModel"></param>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionRuleModel.GetMobileParticles">
      <summary>
        Get a particle set that contains all particles that are not immobile in the context of the rule
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TransitionRuleModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.InverseIsSet">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.IsSourceInversion">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.AbstractTransition">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.SelectableParticle">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.StartState">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.FinalState">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.EndIndexingDeltas">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.AttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.StartStateCode">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.TransitionStateCode">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.FinalStateCode">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.FinalTrackerOrderCode">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.CopyInversionDataToModel(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.LinkIfLogicalInversions(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.IsLogicalInverse(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.GetMobileParticles">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.GetEndIndexingDeltaInversion">
      <summary>
        Creates the inverted version of end indexing deltas
      </summary>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.CreateInvertedTrackerOrderCode(System.Collections.Generic.IList{System.Int32})">
      <summary>
        Creates the inverted order code by code arithmetic (TARGET_ORDER = SOURCE_ORDER - SOURCE_EIDX + TARGET_EIDX)
      </summary>
      <param name="invertedEndIndexingDeltas"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionRuleModel.MakeInvertedStateCode(System.Collections.Generic.IList{Mocassin.Model.Particles.IParticle})">
      <summary>
        Creates an inverted state code for the passed <see cref="T:Mocassin.Model.Particles.IParticle" /> sequence
      </summary>
      <param name="state"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticRuleModel">
      <summary>
        Transition rule model for kinetic transitions that extends the basic transition rule model
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.RuleDirectionValue">
      <summary>
        The rule direction value [-1;0;1] that describes the transport direction encoded in the rule
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.TransitionModel">
      <summary>
        The kinetic transition model the rule model belongs to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.KineticRule">
      <summary>
        The kinetic transition rule this model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.InverseRuleModel">
      <summary>
        The rule model that describes the neutralizing inverted sister rule
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.TransitionState">
      <summary>
        The list of particles that describes the path occupation in the transition state
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.ChargeTransportMatrix">
      <summary>
        The 1xN charge transport matrix that describes the transport charge for each start occupation
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IKineticRuleModel.CreateGeometricInversion">
      <summary>
        Creates a raw geometry inversion of this rule model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticRuleModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticRuleModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.SelectableParticle">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.InverseIsSet">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.AbstractTransition">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.RuleDirectionValue">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.TransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.KineticRule">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.InverseRuleModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.TransitionState">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.AttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.TransitionStateCode">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticRuleModel.ChargeTransportMatrix">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticRuleModel.CreateGeometricInversion">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticRuleModel.LinkIfLogicalInversions(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticRuleModel.IsLogicalInverse(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticRuleModel.GetInvertedTransportMatrix">
      <summary>
        Inverts the charge transport matrix
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel">
      <summary>
        Transition rule model for metropolis transitions. Extends the basic rule model by metropolis specific data context
        options
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel.MetropolisRule">
      <summary>
        The kinetic transition rule this model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel.InverseRuleModel">
      <summary>
        The rule model that describes the neutralizing inverted sister rule
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel.CreateGeometricInversion">
      <summary>
        Creates a raw inverted version of this rule model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.InverseIsSet">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.AbstractTransition">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.SelectableParticle">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.AttemptFrequency">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.TransitionStateCode">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.MetropolisRule">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.InverseRuleModel">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.LinkIfLogicalInversions(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.IsLogicalInverse(Mocassin.Model.Translator.ModelContext.ITransitionRuleModel)">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisRuleModel.CreateGeometricInversion">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder">
      <summary>
        Abstract base class for transition model builder implementations
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateChargeTransportMatrix(System.Collections.Generic.IList{Mocassin.Model.Particles.IParticle},System.Collections.Generic.IComparer{System.Double})">
      <summary>
        Creates the charge transport matrix 1xN for a set of start state particles
      </summary>
      <param name="startState"></param>
      <param name="comparer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateRuleModelBasis``1(Mocassin.Model.Transitions.ITransitionRule)">
      <summary>
        Creates the rule model of the specified type and sets the basis information
      </summary>
      <typeparam name="T"></typeparam>
      <param name="transitionRule"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateCodesAndLinkLogicRuleInversions(System.Collections.Generic.IReadOnlyList{Mocassin.Model.Translator.ModelContext.ITransitionRuleModel})">
      <summary>
        Creates all logic inversion links and simulation codes for a prepared list of rule models
      </summary>
      <param name="ruleModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateAllCodesOnRuleModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ITransitionRuleModel})">
      <summary>
        Creates all codes on a sequence of rule models
      </summary>
      <param name="ruleModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.Create64BitIndexCode(System.Collections.Generic.IEnumerable{System.Int32},System.Byte[])">
      <summary>
        Creates a 64 bit long code for the simulation from the passed set of int values
      </summary>
      <param name="values"></param>
      <param name="buffer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateFinalTrackerOrderCode(System.Collections.Generic.IList{System.Int32},System.Byte[])">
      <summary>
        Translates the end indexing deltas into the final tracker 64 bit order code for the simulation
      </summary>
      <param name="endIndexingDeltas"></param>
      <param name="buffer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateEndIndexingDeltas(Mocassin.Model.Transitions.ITransitionRule)">
      <summary>
        Converts the movement description of a transition rule into the end indexing delta value list
      </summary>
      <param name="transitionRule"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.CreateSelectableParticleSet(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.ITransitionRuleModel})">
      <summary>
        Takes a set of rule models and creates the selectable particle set
      </summary>
      <param name="ruleModels"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.TransitionModelBuilder.AddBasicMobilityInformation(Mocassin.Model.Translator.ModelContext.ITransitionModel)">
      <summary>
        Adds the mobility information (selectable particle set, particle mask ...) to the passed transition model
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.ITransitionModel">
      <summary>
        Represents an unspecified transition model that fully describes a simulation transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionModel.SelectableParticles">
      <summary>
        The particle set of all selectable particles on the transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.ITransitionModel.SelectableParticlesMask">
      <summary>
        The selectable particle set long bitmask
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionModel.GetMappingModels">
      <summary>
        Get all unspecified mapping models of the transition model
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionModel.GetRuleModels">
      <summary>
        Get all unspecified rule models of the transition
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.ITransitionModel.GetMobileParticles">
      <summary>
        Get a particle set that describes all particles that are made mobile by the transition model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.TransitionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.ITransitionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModel.SelectableParticles">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.TransitionModel.SelectableParticlesMask">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModel.GetMappingModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModel.GetRuleModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.TransitionModel.GetMobileParticles">
      <inheritdoc />
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModelBuilder">
      <summary>
        Represents a model builder for kinetic transition models and affiliated data types
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IKineticTransitionModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Transitions.IKineticTransition})">
      <summary>
        Builds and links the complete kinetic transition model collection from the passed set of transitions
      </summary>
      <param name="transitions"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.BuildModels(System.Collections.Generic.IList{Mocassin.Model.Transitions.IKineticTransition})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.TryLinkTransitionModelToExistingSets(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel,System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IKineticTransitionModel})">
      <summary>
        Checks if the user has accidentally defined a
        <see cref="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel" /> that can be used as the
        inverse
      </summary>
      <param name="transitionModel"></param>
      <param name="models"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateTransitionModel(Mocassin.Model.Transitions.IKineticTransition)">
      <summary>
        Creates a single kinetic transition model with rule models and mapping models
      </summary>
      <param name="transition"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateEffectiveMobileParticle(Mocassin.Model.Particles.IParticleSet)">
      <summary>
        Determines and creates an effective particle from the passed mobile particle set
      </summary>
      <param name="mobileParticles"></param>
      <remarks> Particle is for calculation purposes only and not part of the actual model data </remarks>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.SearchEffectiveParticleInModel(Mocassin.Model.Particles.IParticle,System.Collections.Generic.IComparer{System.Double})">
      <summary>
        Searches if the effective particle can be found in the model data. Returns null if none is found
      </summary>
      <param name="effectiveParticle"></param>
      <param name="comparer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateAndAddAbstractMovement(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Creates and adds the abstract movement information to the transition model
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateAndAddRuleModels(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Creates and adds the rule models and affiliated inversions to a kinetic transition model
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.AddRuleDirectionInformation(System.Collections.Generic.IEnumerable{Mocassin.Model.Translator.ModelContext.IKineticRuleModel})">
      <summary>
        Determine and add the rule model direction information to the passed rule models in the context of their set
        transition model
      </summary>
      <param name="ruleModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.GetChargeFocalPointDistanceShift(Mocassin.Model.Translator.ModelContext.IKineticRuleModel,Mocassin.Mathematics.Solver.PointMechanicsSolver,Mocassin.Mathematics.Coordinates.IVectorTransformer)">
      <summary>
        Determines the absolute distance shift of the charge focal point from the transition origin in the context of the
        given transition rule model
      </summary>
      <param name="ruleModel"></param>
      <param name="solver"></param>
      <param name="transformer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateRuleModel(Mocassin.Model.Transitions.IKineticRule,System.Collections.Generic.IComparer{System.Double})">
      <summary>
        Creates a new rule model from a transition rule ith the provided comparer
      </summary>
      <param name="kineticRule"></param>
      <param name="comparer"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateAndAddMappingModels(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Create all contained kinetic transition mapping models an adds them to the transition model
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateMappingModel(Mocassin.Model.Transitions.KineticMapping,Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Creates the mapping model for the passed kinetic mapping and kinetic transition model
      </summary>
      <param name="kineticMapping"></param>
      <param name="transitionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.AddTransitionSequences(Mocassin.Model.Translator.ModelContext.IKineticMappingModel)">
      <summary>
        Adds the 3D and 4D transition sequences to the passed mapping model
      </summary>
      <param name="mappingModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.AddMovementMatrix(Mocassin.Model.Translator.ModelContext.IKineticMappingModel,System.Collections.Generic.IList{System.Int32})">
      <summary>
        Adds the movement matrix to the passed mapping model using the provided abstract movement description
      </summary>
      <param name="mappingModel"></param>
      <param name="abstractMovement"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CalculateAbstractMovement(System.Collections.Generic.IList{Mocassin.Model.Transitions.ConnectorType},System.Collections.Generic.IList{Mocassin.Model.Structures.ICellSite})">
      <summary>
        Calculates the abstract movement from a list of connector types and the list of affiliated unit cell positions
      </summary>
      <param name="connectorTypes"></param>
      <param name="positions"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.TryLinkSelfConsistentMappingModels(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IKineticMappingModel},System.Boolean)">
      <summary>
        Links a self consistent set of mapping models (Mappings that contain their own inversions) with an optional option
        to restore the original linking on failure
      </summary>
      <param name="mappingModels"></param>
      <param name="restoreOriginalOnFailure"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateGeometricModelInversion(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Creates an inverse kinetic transition model for the passed one
      </summary>
      <param name="transitionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.AddGeometricRuleModelInversions(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel,Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Create and add the inverted rules from the source model to the inverted target model
      </summary>
      <param name="transitionModel"></param>
      <param name="inverseModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.AddGeometricMappingModelInversions(Mocassin.Model.Translator.ModelContext.IKineticTransitionModel,Mocassin.Model.Translator.ModelContext.IKineticTransitionModel)">
      <summary>
        Create and add the inverted rules from the source model to the inverted target model
      </summary>
      <param name="transitionModel"></param>
      <param name="inverseModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateGeometricInversion(Mocassin.Model.Translator.ModelContext.IKineticRuleModel)">
      <summary>
        Creates the geometric inversion of the passed kinetic transition rule model
      </summary>
      <param name="ruleModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModelBuilder.CreateAndLinkGeometricInversion(Mocassin.Model.Translator.ModelContext.IKineticMappingModel)">
      <summary>
        Creates and the inverse kinetic transition mapping and links it to the source model
      </summary>
      <param name="mappingModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel">
      <summary>
        Represents a kinetic transition model that fully describes geometry and mobility information of a reference
        transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.Transition">
      <summary>
        The transition the model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.InverseTransitionModel">
      <summary>
        The inverse transition model that describes the neutralizing transition
      </summary>
      <remarks> Is equal to itself if start and end unit cell positions are identical </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.MappingModels">
      <summary>
        The list of existing mapping models that describe all possible geometries this transition model can be applied to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.RuleModels">
      <summary>
        The extended rule models that contain all possible rules for the transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.EffectiveParticle">
      <summary>
        Describes which effective particle describes the global tracking process
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.AbstractMovement">
      <summary>
        Describes the general movement abstraction through integer offsets
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.CreateGeometricInverse">
      <summary>
        Creates the geometric inversion of this rule model
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.MappingsContainInversion">
      <summary>
        Check if the mapping set contains its own inversions
      </summary>
      <returns></returns>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel.GetStartCellReferencePosition">
      <summary>
        Get the start unit cell position this transition model is valid for
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.KineticTransitionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IKineticTransitionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.Transition">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.InverseTransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.MappingModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.RuleModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.EffectiveParticle">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.AbstractMovement">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.GetMappingModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.GetRuleModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.CreateGeometricInverse">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.MappingsContainInversion">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.GetStartCellReferencePosition">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.KineticTransitionModel.GetInverseAbstractMovement">
      <summary>
        Gets the inverted abstract movement description
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModelBuilder">
      <summary>
        Represents a builder for metropolis transition models and affiliated data types
      </summary>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Transitions.IMetropolisTransition})">
      <summary>
        Builds and links the complete metropolis transition model collection from the passed set of transitions
      </summary>
      <param name="transitions"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModelBuilder" />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.#ctor(Mocassin.Model.ModelProject.IModelProject)">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.BuildModels(System.Collections.Generic.IEnumerable{Mocassin.Model.Transitions.IMetropolisTransition})">
      <inheritdoc />
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateTransitionModel(Mocassin.Model.Transitions.IMetropolisTransition)">
      <summary>
        Creates a single metropolis transition model with rule models and mapping models
      </summary>
      <param name="transition"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateGeometricModelInversion(Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates an inverse metropolis transition model if required or if the mappings already contain
        the inversion the original is returned
      </summary>
      <param name="transitionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateAndAddMappingModels(Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates all mapping models for a metropolis transition model and links the mappings together if they contain
        their own inversions
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateMappingModel(Mocassin.Model.Transitions.MetropolisMapping,Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates a single mapping model for a metropolis transition mapping object and links it to the passed transition
        model
      </summary>
      <param name="mapping"></param>
      <param name="transitionModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateAndAddMappingModelInversions(Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel,Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates inverted mappings models for the original transition models, links them to the originals
        and adds the inversions to the list of the inverse model
      </summary>
      <param name="originalModel"></param>
      <param name="inverseModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateAndLinkGeometricInversion(Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel)">
      <summary>
        Creates a single inverted mapping model and sets both inverted mappings to the appropriate value
      </summary>
      <param name="mappingModel"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.LinkSelfConsistentMappingModels(System.Collections.Generic.IList{Mocassin.Model.Translator.ModelContext.IMetropolisMappingModel})">
      <summary>
        Links a set of self consistent mapping models (Mappings that contain their own inversions)
      </summary>
      <param name="mappingModels"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateAndAddRuleModels(Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates and adds the rule models of both parent and dependent rules on the passed transition model
      </summary>
      <param name="transitionModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateRuleModel(Mocassin.Model.Transitions.IMetropolisRule)">
      <summary>
        Creates a rule model for the passed metropolis rule
      </summary>
      <param name="metropolisRule"></param>
      <returns></returns>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.AddGeometricRuleModelInversions(Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel,Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel)">
      <summary>
        Creates the set of rule inversions and sets the on the passed inverse metropolis transition model
      </summary>
      <param name="originalModel"></param>
      <param name="inverseModel"></param>
    </member>
    <member
      name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModelBuilder.CreateGeometricInversion(Mocassin.Model.Translator.ModelContext.IMetropolisRuleModel)">
      <summary>
        Creates a single inverted metropolis rule model and sets both inverted mappings to the appropriate value
      </summary>
      <param name="originalModel"></param>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel">
      <summary>
        Represents a metropolis transition model that fully describes geometry and mobility information of a reference
        transition
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel.Transition">
      <summary>
        The transition the model is based upon
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel.InverseTransitionModel">
      <summary>
        The inverse transition model that describes the neutralizing transition
      </summary>
      <remarks> Is equal to itself if start and end unit cell positions are identical </remarks>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel.MappingModels">
      <summary>
        The list of existing mapping models that describe all possible geometries this transition model can be applied to
      </summary>
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel.RuleModels">
      <summary>
        The extended rule models that contain all possible rules for the transition
      </summary>
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel.CreateGeometricInversion">
      <summary>
        Creates a geometric inversion of this transition model
      </summary>
      <returns></returns>
    </member>
    <member name="T:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel">
      <inheritdoc cref="T:Mocassin.Model.Translator.ModelContext.IMetropolisTransitionModel" />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.Transition">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.InverseTransitionModel">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.MappingModels">
      <inheritdoc />
    </member>
    <member name="P:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.RuleModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.GetMappingModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.GetRuleModels">
      <inheritdoc />
    </member>
    <member name="M:Mocassin.Model.Translator.ModelContext.MetropolisTransitionModel.CreateGeometricInversion">
      <inheritdoc />
    </member>
  </members>
</doc>