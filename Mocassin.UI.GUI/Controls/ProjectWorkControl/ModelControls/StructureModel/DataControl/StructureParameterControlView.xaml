<UserControl
  x:Class="Mocassin.UI.GUI.Controls.ProjectWorkControl.ModelControls.StructureModel.DataControl.StructureParameterControlView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Mocassin.UI.GUI.Controls.ProjectWorkControl.ModelControls.StructureModel.DataControl"
  xmlns:spaceGroups="clr-namespace:Mocassin.Symmetry.SpaceGroups;assembly=Mocassin.Symmetry"
  xmlns:converter="clr-namespace:Mocassin.UI.GUI.Base.Converter"
  xmlns:crystalSystems="clr-namespace:Mocassin.Symmetry.CrystalSystems;assembly=Mocassin.Symmetry"
  d:DataContext="{d:DesignInstance local:StructureParameterControlViewModel, IsDesignTimeCreatable = True}"
  mc:Ignorable="d"
  d:DesignHeight="450" d:DesignWidth="800"
  Background="Transparent">

  <UserControl.Resources>
    <Style TargetType="{x:Type TextBox}" x:Key="ReadOnlyBoxStyle">
      <Style.Triggers>
        <Trigger Property="IsReadOnly" Value="True">
          <Setter Property="Opacity" Value=".5" />
        </Trigger>
        <Trigger Property="IsReadOnly" Value="False">
          <Setter Property="Opacity" Value="1" />
        </Trigger>
      </Style.Triggers>
    </Style>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="2*" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="2*" />
      <RowDefinition Height="3*" />
    </Grid.RowDefinitions>
    <DataGrid Name="SpaceGroupDataGrid"
              Grid.Row="0" Grid.Column="0"
              ColumnWidth="*"
              ItemsSource="{Binding SpaceGroups}" 
              SelectedItem="{Binding SelectedSpaceGroup}"
              IsReadOnly="True" 
              AutoGenerateColumns="False"
              GridLinesVisibility="None"
              VerticalAlignment="Stretch" 
              HorizontalAlignment="Stretch"
              VerticalScrollBarVisibility="Auto"
              SelectionChanged="SpaceGroupDataGrid_OnSelectionChanged">

      <DataGrid.Columns>
        <DataGridTextColumn Binding="{Binding Index}" 
                            Header="Space Group" />

        <DataGridTextColumn Binding="{Binding Literal}" 
                            Header="Name" />

        <DataGridTextColumn Binding="{Binding Specifier}" 
                            Header="Info" />

        <DataGridTextColumn
          Binding="{Binding CrystalSystemIndex, Converter={converter:IndexToEnumConverter}, ConverterParameter={x:Type crystalSystems:CrystalSystemId}}"
          Header="System" />

      </DataGrid.Columns>
    </DataGrid>
    <DataGrid Grid.Row="0" Grid.Column="1" 
              AutoGenerateColumns="False" 
              ColumnWidth="*" 
              GridLinesVisibility="None" 
              VerticalScrollBarVisibility="Auto"
              ItemsSource="{Binding SelectedSpaceGroup.OperationLiterals}">

      <DataGrid.Columns>
        <DataGridTextColumn Binding="{Binding}">
          <DataGridTextColumn.HeaderTemplate>
            <DataTemplate>
              <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.SelectedSpaceGroup}">
                <TextBlock Text="{Binding Literal, StringFormat=Selected {0}}"/>
                <TextBlock Text=" "/>
                <TextBlock Text="{Binding Index, StringFormat=({0})}"/>
              </DockPanel>
            </DataTemplate>
          </DataGridTextColumn.HeaderTemplate>
        </DataGridTextColumn>
      </DataGrid.Columns>
    </DataGrid>
    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                VerticalAlignment="Stretch">

      <GroupBox Header="Structure Name">
        <TextBox Text="{Binding StructureInfo.Name, UpdateSourceTrigger=PropertyChanged,Delay=500}"/>
      </GroupBox>
      <Grid DataContext="{Binding ParameterSetter}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <GroupBox Header="Parameter A [Ang]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}" 
                       Text="{Binding ParamA, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyParamA}" />

            </GroupBox>
            <GroupBox Header="Parameter B [Ang]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}" 
                       Text="{Binding ParamB, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyParamB}" />

            </GroupBox>
            <GroupBox Header="Parameter C [Ang]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}" 
                       Text="{Binding ParamC, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyParamC}" />

            </GroupBox>
          </StackPanel>
          <StackPanel Grid.Column="1">
            <GroupBox Header="Angle Alpha [°]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}" 
                       Text="{Binding Alpha, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyAlpha}" />

            </GroupBox>
            <GroupBox Header="Angle Beta [°]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}"
                       Text="{Binding Beta, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyBeta}" />

            </GroupBox>
            <GroupBox Header="Angle Gamma [°]">
              <TextBox Style="{StaticResource ReadOnlyBoxStyle}" 
                       Text="{Binding Gamma, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                       IsReadOnly="{Binding IsReadOnlyGamma}" />

            </GroupBox>
          </StackPanel>
      </Grid>
    </StackPanel>
  </Grid>
</UserControl>
