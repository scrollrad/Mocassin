<Application x:Class="Mocassin.UI.GUI.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Mocassin.UI.GUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:uiCommands="clr-namespace:Mocassin.UI.Base.Commands.UiCommands"
             xmlns:converter="clr-namespace:Mocassin.UI.GUI.Base.Converter">
  <Application.Resources>
    <ResourceDictionary>
      <!-- Converters -->
      <BooleanToVisibilityConverter x:Key="App.Converter.BooleanToVisibility"/>
      <converter:NumericExpressionToValueConverter x:Key="App.Converter.NumericExpressionToValue"/>
      <!-- System color overwrites -->

      <!-- Styles with keys -->

      <Style TargetType="{x:Type Button}"
             x:Key="App.Style.Button.NullCommand">
        <Style.Triggers>
          <Trigger Property="Command" Value="{x:Null}">
            <Setter Property="IsEnabled" Value="False" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type Run}"
             x:Key="App.Style.Run.Keyword">
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="FontWeight" Value="Bold" />
      </Style>

      <Style TargetType="{x:Type Run}"
             x:Key="App.Style.Run.Important">
        <Setter Property="FontStyle" Value="Italic" />
      </Style>

      <Style TargetType="{x:Type Run}"
             x:Key="App.Style.Run.ModelObject">
        <Setter Property="Foreground" Value="ForestGreen" />
        <Setter Property="FontWeight" Value="Bold" />
      </Style>

      <Style TargetType="{x:Type Run}"
             x:Key="App.Style.Run.Property">
        <Setter Property="Foreground" Value="OrangeRed" />
        <Setter Property="FontWeight" Value="Bold" />
      </Style>

      <Style TargetType="{x:Type ToolTip}"
             x:Key="App.Style.ToolTip.Default">
        <Setter Property="MaxWidth" Value="500" />
      </Style>

      <Style TargetType="{x:Type TextBlock}"
             x:Key="App.Style.ToolTip.TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Justify" />
      </Style>

      <Style TargetType="Border" x:Key="App.Style.Border.Box">
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlDarkDarkBrush}" />
      </Style>

      <Style TargetType="{x:Type GroupBox}" x:Key="App.Style.GroupBox.NoBorder">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlDarkBrush}" />
      </Style>

      <Style TargetType="{x:Type GroupBox}" x:Key="App.Style.GroupBox.RightBorder">
        <Setter Property="BorderThickness" Value="0,0,2,0" />
        <Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlDarkBrush}" />
      </Style>

      <Style TargetType="{x:Type TextBox}" x:Key="App.Style.TextBox.GreyOutIfReadOnly">
        <Style.Triggers>
          <Trigger Property="IsReadOnly" Value="True">
            <Setter Property="Opacity" Value=".5" />
          </Trigger>
          <Trigger Property="IsReadOnly" Value="False">
            <Setter Property="Opacity" Value="1" />
          </Trigger>
        </Style.Triggers>
      </Style>

            <!-- Always on styles -->
      <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="Transparent"/>
      </Style>

      <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TabItem}">
              <Border Margin="-3,0,3,0" Name="Border">
                <Grid Name="Grid" Margin="5,2,5,2">
                  <ContentPresenter Name="ContentSite" ContentSource="Header" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                  <Setter TargetName="Border" Property="Background"
                          Value="{x:Static SystemColors.InactiveSelectionHighlightBrush}" />
                </Trigger>
                <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                  <Setter TargetName="Border" Property="Background" Value="{x:Static SystemColors.MenuHighlightBrush}" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                  <Setter TargetName="Border" Property="Background" Value="{x:Static SystemColors.MenuHighlightBrush}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="Transparent" />
      </Style>

      <Style TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
      </Style>

      <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
      </Style>

      <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="RowBackground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="{x:Static SystemColors.GradientInactiveCaptionBrush}"/>
      </Style>

      <Style TargetType="{x:Type Thumb}" x:Key="App.Style.ColumnHeader.ThumbStyle">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Rectangle Width="1" Stroke="Transparent" Cursor="SizeWE" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,2"
                        Background="Transparent"
                        BorderBrush="Black"
                        Grid.ColumnSpan="2" />
                <ContentPresenter Grid.Column="0" Margin="6,3,6,3" VerticalAlignment="Center" />
                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M 0,0 L 1,0 0.5,1 z" Stretch="Fill"
                      Grid.Column="1" Width="8" Height="6" Fill="Black" Margin="0,0,8,0"
                      VerticalAlignment="Center" RenderTransformOrigin="0.5, 0.4" />
                <Rectangle Grid.Column="0" Width="1" Fill="#EEEEEE" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                <Rectangle Grid.Column="0" Width="1" Margin="0,0,1,0" Fill="#DDDDDD" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                <Thumb x:Name="PART_LeftHeaderGripper"  Grid.Column="0" HorizontalAlignment="Left" Style="{StaticResource App.Style.ColumnHeader.ThumbStyle}" />
                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right"
                       Style="{StaticResource App.Style.ColumnHeader.ThumbStyle}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="BackgroundBorder" Property="Background" Value="{x:Static SystemColors.MenuHighlightBrush}" />
                  <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{x:Static SystemColors.HighlightBrush}" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Ascending">
                  <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                  <Setter TargetName="SortArrow" Property="RenderTransform">
                    <Setter.Value>
                      <RotateTransform Angle="180" />
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                  <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="DisplayIndex" Value="0">
                  <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

      </Style>

      <Style TargetType="{x:Type TextBox}">
        <Style.Triggers>
          <Trigger Property="IsReadOnly" Value="True">
            <Setter Property="Opacity" Value=".5" />
          </Trigger>
          <Trigger Property="IsReadOnly" Value="False">
            <Setter Property="Opacity" Value="1" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource App.Style.GroupBox.NoBorder}"/>

      <!-- Static objects -->

      <s:Boolean x:Key="Bool.True">True</s:Boolean>
      <s:Boolean x:Key="Bool.False">False</s:Boolean>
      <s:Double x:Key="App.Size.RowHeaderLogo">25</s:Double>

      <uiCommands:UpdateTextBoxSourceCommand x:Key="App.Command.UpdateTextBoxSource" />

      <s:String x:Key="App.String.ToolTip.PropertyInfo">[Property Information]</s:String>

      <s:String x:Key="App.String.Particle">[Particle]</s:String>
      <s:String x:Key="App.String.Particle.Charge">[Particle.Charge]</s:String>
      <s:String x:Key="App.String.Particle.Symbol">[Particle.Symbol]</s:String>
      <s:String x:Key="App.String.Particle.Vacancy">[Particle.Vacancy]</s:String>
      <s:String x:Key="App.String.Particle.Void">[Particle.Void]</s:String>

      <s:String x:Key="App.String.ParticleSet">[ParticleSet]</s:String>
      <s:String x:Key="App.String.ParticleSet.Particles">[ParticleSet.Particles]</s:String>

      <s:String x:Key="App.String.UnitCellPosition">[UnitCellPosition]</s:String>
      <s:String x:Key="App.String.UnitCellPosition.A">[UnitCellPosition.A]</s:String>
      <s:String x:Key="App.String.UnitCellPosition.B">[UnitCellPosition.B]</s:String>
      <s:String x:Key="App.String.UnitCellPosition.C">[UnitCellPosition.C]</s:String>
      <s:String x:Key="App.String.UnitCellPosition.Occupation">[UnitCellPosition.Occupation]</s:String>
      <s:String x:Key="App.String.UnitCellPosition.Stability">[UnitCellPosition.Stability]</s:String>

      <s:String x:Key="App.String.SpaceGroup">[SpaceGroup]</s:String>
      <s:String x:Key="App.String.SpaceGroup.Index">[SpaceGroup.Index]</s:String>
      <s:String x:Key="App.String.SpaceGroup.Literal">[SpaceGroup.Literal]</s:String>
      <s:String x:Key="App.String.SpaceGroup.Info">[SpaceGroup.Info]</s:String>
      <s:String x:Key="App.String.SpaceGroup.System">[SpaceGroup.System]</s:String>

      <s:String x:Key="App.String.CellParameters">[CellParameters]</s:String>
      <s:String x:Key="App.String.CellParameters.Name">[CellParameters.Name]</s:String>
      <s:String x:Key="App.String.CellParameters.A">[CellParameters.a]</s:String>
      <s:String x:Key="App.String.CellParameters.B">[CellParameters.b]</s:String>
      <s:String x:Key="App.String.CellParameters.C">[CellParameters.c]</s:String>
      <s:String x:Key="App.String.CellParameters.Alpha">[CellParameters.&#x3B1;]</s:String>
      <s:String x:Key="App.String.CellParameters.Beta">[CellParameters.&#x3B2;]</s:String>
      <s:String x:Key="App.String.CellParameters.Gamma">[CellParameters.&#x3B3;]</s:String>

      <s:String x:Key="App.String.StateExchangePair">[StateExchangePair]</s:String>
      <s:String x:Key="App.String.StateExchangePair.AcceptorState">[StateExchangePair.Acceptor]</s:String>
      <s:String x:Key="App.String.StateExchangePair.DonorState">[StateExchangePair.Donor]</s:String>

      <s:String x:Key="App.String.StateExchangeGroup">[StateExchangeGroup]</s:String>
      <s:String x:Key="App.String.StateExchangeGroup.StateExchangePairs">[StateExchangeGroup.StateExchangePairs]</s:String>

      <s:String x:Key="App.String.AbstractTransition">[AbstractTransition]</s:String>
      <s:String x:Key="App.String.AbstractTransition.Connection">[AbstractTransition.ConnectionPattern]</s:String>
      <s:String x:Key="App.String.AbstractTransition.AssociationFlag">[AbstractTransition.AssociationFlag]</s:String>
      <s:String x:Key="App.String.AbstractTransition.StateExchangeGroups">[AbstractTransition.StateExchangeGroups]</s:String>

      <s:String x:Key="App.String.MetropolisTransition">[MetropolisTransition]</s:String>
      <s:String x:Key="App.String.MetropolisTransition.Abstract">[MetropolisTransition.Abstract]</s:String>
      <s:String x:Key="App.String.MetropolisTransition.FirstWyckoff">[MetropolisTransition.FirstWyckoff]</s:String>
      <s:String x:Key="App.String.MetropolisTransition.SecondWyckoff">[MetropolisTransition.SecondWyckoff]</s:String>

      <s:String x:Key="App.String.KineticsTransition">[KineticTransition]</s:String>
      <s:String x:Key="App.String.KineticsTransition.Abstract">[KineticTransition.Abstract]</s:String>
      <s:String x:Key="App.String.KineticsTransition.PathGeometry">[KineticTransition.PathGeometry]</s:String>

      <s:String x:Key="App.String.StableEnvironment">[StableEnvironment]</s:String>
      <s:String x:Key="App.String.StableEnvironment.CutoffRange">[CutoffRange]</s:String>
      <s:String x:Key="App.String.InteractionFilter">[InteractionFilter]</s:String>
      <s:String x:Key="App.String.InteractionFilter.StartRadius">[InteractionFilter.StartRadius]</s:String>
      <s:String x:Key="App.String.InteractionFilter.EndRadius">[InteractionFilter.EndRadius]</s:String>
      <s:String x:Key="App.String.InteractionFilter.CenterWyckoff">[InteractionFilter.CenterWyckoff]</s:String>
      <s:String x:Key="App.String.InteractionFilter.PartnerWyckoff">[InteractionFilter.PartnerWyckoff]</s:String>

      <s:String x:Key="App.String.SymmetricPairInteraction">[SymmetricPairInteraction]</s:String>

      <s:String x:Key="App.String.UnstableEnvironment">[UnstableEnvironment]</s:String>
      <s:String x:Key="App.String.UnstableEnvironment.CenterWyckoff">[UnstableEnvironment.Center]</s:String>
      <s:String x:Key="App.String.UnstableEnvironment.InteractionFilters">[UnstableEnvironment.InteractionFilters]</s:String>

      <s:String x:Key="App.String.GroupInteraction">[GroupInteraction]</s:String>
      <s:String x:Key="App.String.GroupInteraction.CenterWyckoff">[GroupInteraction.Center]</s:String>
      <s:String x:Key="App.String.GroupInteraction.Geometry">[GroupInteraction.Geometry]</s:String>

      <s:String x:Key="App.String.MetropolisSimulation">[MetropolisSimulation]</s:String>
      <s:String x:Key="App.String.MetropolisSimulation.Transitions">[MetropolisSimulation.Transitions]</s:String>

      <s:String x:Key="App.String.KineticSimulation">[KineticSimulation]</s:String>
      <s:String x:Key="App.String.KineticSimulation.Transitions">[KineticSimulation.Transitions]</s:String>

      <s:String x:Key="App.String.BuildingBlock">[BuildingBlock]</s:String>

      <s:String x:Key="App.String.ComboBox.SearchModeToggle">Text search mode</s:String>


      <Thickness x:Key="App.Margin.Default" Bottom="2" Top="2" Left="2" Right="2" />
      <Thickness x:Key="App.Margin.HorizontalStack" Bottom="0" Top="0" Left="0" Right="4" />
      <Thickness x:Key="App.Margin.VerticalStack" Bottom="4" Top="0" Left="0" Right="0" />
      <Thickness x:Key="App.Margin.VerticalStackLarge" Bottom="10" Top="0" Left="0" Right="0" />
      <Thickness x:Key="App.Margin.GroupBoxContent" Bottom="0" Top="2" Left="2" Right="0" />
      <Thickness x:Key="App.Margin.GroupBoxContentLarge" Bottom="0" Top="10" Left="2" Right="0" />

      <ToolTip x:Key="App.ToolTip.ModelSelection">
        <TextBlock Text="Model" />
      </ToolTip>

      <ToolTip x:Key="App.ToolTip.CustomizationSelection">
        <TextBlock Text="Customization" />
      </ToolTip>

      <ToolTip x:Key="App.ToolTip.JobTranslationSelection">
        <TextBlock Text="Translation" />
      </ToolTip>

      <ToolTip x:Key="App.ToolTip.ProjectSelection">
        <TextBlock Text="Project" />
      </ToolTip>

    </ResourceDictionary>
  </Application.Resources>
</Application>