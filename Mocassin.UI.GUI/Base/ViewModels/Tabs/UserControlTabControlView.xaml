<UserControl
  x:Class="Mocassin.UI.GUI.Base.ViewModels.Tabs.UserControlTabControlView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Mocassin.UI.GUI.Base.ViewModels.Tabs"
  mc:Ignorable="d"
  d:DataContext="{d:DesignInstance local:IUserControlTabControlViewModel, IsDesignTimeCreatable=True}"
  d:DesignHeight="450" d:DesignWidth="800"
  Height="Auto" Width="Auto">

  <Grid Margin="5,5,5,5">
    <TabControl ItemsSource="{Binding ObservableItems}"
                SelectedItem="{Binding SelectedTab}"
                FontSize="{Binding HeaderFontSize}"
                TabStripPlacement="{Binding TabStripPlacement}"
                Name="PrimaryTabControl">
      <TabControl.Resources>
        <DataTemplate DataType="{x:Type local:CloseableUserControlTabItem}">
          <StackPanel Orientation="Horizontal">
            <TextBlock>
              <TextBlock.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CloseTabCommand, Mode=OneTime}" />
                <MouseBinding MouseAction="MiddleClick" Command="{Binding CloseTabCommand, Mode=OneTime}"/>
              </TextBlock.InputBindings>
              <Run Text="{Binding TabName, Mode=OneTime}"/>
            </TextBlock>
            <Border Width="15" Height="15" Margin="10,2,0,0" ToolTip="Close tab" CornerRadius="15"
                    SnapsToDevicePixels="True" BorderThickness="1">
              <Border.Background>
                <RadialGradientBrush GradientOrigin=".25,.25">
                  <GradientStop Color="White" Offset=".1"/>
                  <GradientStop Color="LightBlue" Offset=".5"/>
                </RadialGradientBrush>
              </Border.Background>
              <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding CloseTabCommand, Mode=OneTime}" />
              </Border.InputBindings>
              <Border.Style>
                <Style TargetType="{x:Type Border}">
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                      <Setter Property="Opacity" Value=".5"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Border.Style>
            </Border>
          </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:UserControlTabItem}">
          <TextBlock Text="{Binding TabName, Mode=OneWay}">
            <TextBlock.ContextMenu>
              <ContextMenu DataContext="{Binding Source={x:Reference Name=PrimaryTabControl}, Path=DataContext}">
                <MenuItem Name="PanelContentActiveMenuItem" Header="Show panel" IsCheckable="True" 
                          IsChecked="{Binding IsActive}"/>
          
              </ContextMenu>
            </TextBlock.ContextMenu>
          </TextBlock>
        </DataTemplate>
      </TabControl.Resources>
      <TabControl.ContentTemplate>
        <DataTemplate DataType="{x:Type local:UserControlTabItem}">
          <ContentPresenter Content="{Binding UserControl, Mode=OneWay}" 
                            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.IsActive, Converter={StaticResource App.Converter.BooleanToVisibility}}" />
        </DataTemplate>
      </TabControl.ContentTemplate>
    </TabControl>
  </Grid>
</UserControl>
